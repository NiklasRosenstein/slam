{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Shut Shut is an opinionated tool to simplify publishing pure Python packages. What can Shut do for you? Generate setup files ( setup.py , MANIFEST.in , LICENSE.txt ) Sanity check your package configuration Build and publish source/wheel distributions Execute unit tests and static type checks and more Installation Shut requires Python 3.7+ and can be installed from PyPI: $ pip install shut Quickstart Initialize a new Python package: $ shut pkg new --name my.package . write .gitignore write README.md write package.yml write src/my/package/__init__.py write src/my/__init__.py Generate setuptools files: $ shut pkg update write setup.py write MANIFEST.in Create a changelog entry and commit: $ shut changelog --add feature --for cli -cm 'Added some useful options.' Sanity-check the package configuration: shut pkg checks \u2714\ufe0f classifiers \u26a0\ufe0f license: not specified \u2714\ufe0f namespace files \u2714\ufe0f package-author \u26a0\ufe0f package-url: missing \u2714\ufe0f package-version \u2714\ufe0f readme \u2714\ufe0f up to date ran 8 checks for package my.package in 0.003s Commit the current status: $ git add . && git commit -m 'bootstrapped package' Release a new version: $ shut pkg bump --tag --push figuring bump mode from changelog 1 feature \u2192 minor bumping 3 version reference(s) package.yml: 0.0.0 \u2192 0.1.0 setup.py: 0.0.0 \u2192 0.1.0 src/my/package/__init__.py: 0.0.0 \u2192 0.1.0 release staged changelog .changelog/_unreleased.yml \u2192 .changelog/0.1.0.yml updating files write setup.py write MANIFEST.in tagging 0.1.0 [master ec1e9b3] (my.package) bump version to 0.1.0 4 files changed, 4 insertions(+), 4 deletions(-) rename .changelog/{_unreleased.yml => 0.1.0.yml} (78%) Enumerating objects: 24, done. Counting objects: 100% (24/24), done. Delta compression using up to 8 threads Compressing objects: 100% (17/17), done. Writing objects: 100% (24/24), 3.87 KiB | 566.00 KiB/s, done. Total 24 (delta 4), reused 0 (delta 0) To https://github.com/me/my-package * [new branch] master -> master * [new tag] 0.1.0 -> 0.1.0 Publish the release to PyPI: $ shut pkg publish warehouse:pypi building setuptools:sdist :: build/my.package-0.1.0.tar.gz building setuptools:wheel :: build/my.package-0.1.0-py3-none-any.whl publishing warehouse:pypi :: build/my.package-0.1.0.tar.gz :: build/my.package-0.1.0-py3-none-any.whl Shut also makes it easy to publish from within CI jobs. For more information on this, check out the Publishing Guide . Copyright \u00a9 2021 Niklas Rosenstein","title":"Welcome to Shut"},{"location":"#welcome-to-shut","text":"Shut is an opinionated tool to simplify publishing pure Python packages. What can Shut do for you? Generate setup files ( setup.py , MANIFEST.in , LICENSE.txt ) Sanity check your package configuration Build and publish source/wheel distributions Execute unit tests and static type checks and more","title":"Welcome to Shut"},{"location":"#installation","text":"Shut requires Python 3.7+ and can be installed from PyPI: $ pip install shut","title":"Installation"},{"location":"#quickstart","text":"Initialize a new Python package: $ shut pkg new --name my.package . write .gitignore write README.md write package.yml write src/my/package/__init__.py write src/my/__init__.py Generate setuptools files: $ shut pkg update write setup.py write MANIFEST.in Create a changelog entry and commit: $ shut changelog --add feature --for cli -cm 'Added some useful options.' Sanity-check the package configuration: shut pkg checks \u2714\ufe0f classifiers \u26a0\ufe0f license: not specified \u2714\ufe0f namespace files \u2714\ufe0f package-author \u26a0\ufe0f package-url: missing \u2714\ufe0f package-version \u2714\ufe0f readme \u2714\ufe0f up to date ran 8 checks for package my.package in 0.003s Commit the current status: $ git add . && git commit -m 'bootstrapped package' Release a new version: $ shut pkg bump --tag --push figuring bump mode from changelog 1 feature \u2192 minor bumping 3 version reference(s) package.yml: 0.0.0 \u2192 0.1.0 setup.py: 0.0.0 \u2192 0.1.0 src/my/package/__init__.py: 0.0.0 \u2192 0.1.0 release staged changelog .changelog/_unreleased.yml \u2192 .changelog/0.1.0.yml updating files write setup.py write MANIFEST.in tagging 0.1.0 [master ec1e9b3] (my.package) bump version to 0.1.0 4 files changed, 4 insertions(+), 4 deletions(-) rename .changelog/{_unreleased.yml => 0.1.0.yml} (78%) Enumerating objects: 24, done. Counting objects: 100% (24/24), done. Delta compression using up to 8 threads Compressing objects: 100% (17/17), done. Writing objects: 100% (24/24), 3.87 KiB | 566.00 KiB/s, done. Total 24 (delta 4), reused 0 (delta 0) To https://github.com/me/my-package * [new branch] master -> master * [new tag] 0.1.0 -> 0.1.0 Publish the release to PyPI: $ shut pkg publish warehouse:pypi building setuptools:sdist :: build/my.package-0.1.0.tar.gz building setuptools:wheel :: build/my.package-0.1.0-py3-none-any.whl publishing warehouse:pypi :: build/my.package-0.1.0.tar.gz :: build/my.package-0.1.0-py3-none-any.whl Shut also makes it easy to publish from within CI jobs. For more information on this, check out the Publishing Guide . Copyright \u00a9 2021 Niklas Rosenstein","title":"Quickstart"},{"location":"changelog/","text":"Changelog 0.21.0 (2021-09-18) general feature : add $.scripts in package.yml and shut pkg run command 0.20.0 (2021-09-16) general feature : add shut init command group with initial shut init mkdocs command feature : add documentation job in GitHub Actions template feature : ignore GitHub Actions template when checking package config in GitHub Actions (this is mainly used when using an unreleased version of shut to generate the action template or when needing to do quick modifications to the action config without triggering the shut checks in CI). 0.19.0 (2021-09-15) general change : Changelog entry fixes is now optional change : switch to Mako as a template engine from Jinja2 feature : add $.templates to AbstractProjectModel and the github- actions template change : shut pkg new now adds the github-template to the generated package.yml change : remove template rendering capability of pylint test driver, instead add pylintrc template plugin 0.18.2 (2021-09-04) general fix : min click version must be 7.1 for no_args_is_help option, also allow 8.x 0.18.1 (2021-08-27) general fix : fix added in 0.18.0 for #33 is actually incorrect, the command variable was needed when using the _tempcopy() feature. now it is fixed for good (#33) 0.18.0 (2021-08-26) general feature : add pylint test driver fix : the fix from 0.17.4 actually made the install cache not work at all and just always install test requirements, now shut knows per driver selection whether dependencies have been installed before or not feature : test drivers are now loaded via the shut.test_drivers entrypoint, allowing plugins to be registered from external packages feature : pylint now comes with .pylintrc templates (only shut for now) and can also render templates from HTTP(S) URLs feature : Shut now recognizes lowercase readme/license files (#31) fix : render command variable into setup.py only if package $.install.hooks is used (#33) internal feature : add AbstractProjectModel.get_auxiliary_renderers() 0.17.4 (2021-08-20) general fix : fix missing test-requirements installation with shut mono|pkg test --isolate if the comand was run previously 0.17.3 (2021-08-20) general fix : shut mono|pkg test --isolate no longer installs the main package in develop mode 0.17.2 (2021-08-14) general fix : shut mono|pkg update --verify-tag \"\" does not show an error when it should feature : shut mono|pkg update --verify-tag now accepts strings prefixed with refs/tags/ and strips that prefix (useful for GitHub Actions to use the $GITHUB_REF variable) fix : shut pkg update --dry option not respected 0.17.1 (2021-08-13) general change : dd shut mono|pkg test -q,--quiet option to quietly install test requirements with Pip, changed default to not do silent installs 0.17.0 (2021-08-13) api feature : add Package.get_source_directory() general feature : add shut pkg test --install/--no-install which will default to --install if the current Python installation (determined by the PYTHON variable or falling back to just the python command) is a virtual env feature : add support for a mypy test driver feature : add $.test-drivers field in package model and deprecate $.test- driver for it. feature : add shut mono test --install/--no-install option (parallel to the existing option for shut pkg test ), without the flag test requirements are only installed if Shut did not install the same requirements into the same environment before feature : make sure $.test-requirements are installed when running shut mono|pkg test in addition to the test-driver requirements. Update some output formatting of shut mono|pkg test fix : lines in MANIFEST.in outside the shut-specific block are not kept on shut pkg update (fixed in VirtualFiles.write_all() ) fix : package $.author data can now be de-serialized from a mapping again (as used to be possible before migrating to databind.core^1.x fix : fix printing of Failed test details: when there were no failures but at least one skipped test case feature : pytest driver now supports a $.parallelism option which automatically pulls in pytest-xdist as a test requirement feature : shut mono|pkg bump --tag|--push|--dry options now have short versions -t|-p|-d respectively 0.16.1 (2021-08-12) general fix : pass filename to databind deserializer when loading monorepo/package configuration files fix : Cannot run \"pip install\" without develop mode on package that inherits monorepo license (#22) 0.16.0 (2021-08-10) general fix : fix missing import for typing.Dict in pytest driver module, which could in some Python versions result in a NameError change : add extra_requires[test] in generated setup.py fix : fix setup.py rendering for inherit license files (#21) change : _tempcopy() function in setup.py now fails if the file cannot be copied from the source file 0.15.1 (2021-08-09) general feature : add BSD2, BSD3, BSD4 and Apache2 license templates (@ndjeong) 0.15.0 (2021-08-09) general feature : add shut mono|pkg status --json --include-config options 0.14.3 (2021-08-08) general fix : fix VendoredRequirement._normpath() which corrupted absolute paths on Windows (e.g. C:/path/to would be converted to ./C:\\path\\to when it should just be C:\\path\\to ). This caused shut pkg install on Windows to fail. fix : No module named setuptools error when using shut pkg install in venv on Windows (#16) fix : fix additional CR in generated LICENSE.txt on Windows when installing Shut from source (#17) fix : py.typed file is rendered into MANIFEST.in with backslashes 0.14.2 (2021-08-03) general change : update how install hooks are rendered into setup.py 0.14.1 (2021-07-23) general fix : TypeError when using --extra and --dev/--test 0.14.0 (2021-07-22) general feature : add --dev/--no-dev and --test/--no-test options to shut mono install and shut pkg install 0.13.3 (2021-06-20) general fix : exclude python requirements when rendering requirements.txt 0.13.2 (2021-06-20) general fix : fix format of requirements in requirements.txt 0.13.1 (2021-06-20) general fix : also install PackageModel.test_requirements on shut pkg install 0.13.0 (2021-06-20) general feature : add PackageModel.dev_requirements which will be installed with shut pkg install feature : add PackageModel.render_requirements_txt which will be rendered with shut pkg update 0.12.0 (2021-06-08) general change : allow running Shut via python -m shut fix : fix call to run_install() in shut mono install 0.11.4 (2021-02-01) general fix : shut pkg install now correctly installs transitive package interdependencies in the right order 0.11.3 (2021-01-29) general fix : fix error rendering setup.py if the license file did not exist feature : add get-version command to shut mono and shut pkg fix : shut pkg requirements add now adds the InstallConfiguration pip args 0.11.2 (2020-12-19) general fix : fix license_file relative path generation in setuptools renderer, now correctly inherits the license file from the monorepo 0.11.1 (2020-12-04) general fix : fix error in setuptools renderer if no license is configured in the package 0.11.0 (2020-12-03) general feature : add $.package-data field to package.yml fix : add missing package data that needs to be packaged with shut 0.10.3 (2020-11-27) general fix : referencing a LICENSE or README outside the package directory now does not fail on install if the source file does not exist, but it will print a warning 0.10.2 (2020-11-27) general fix : add PackageModel.license_file and fix license rendering into MANIFEST.in and setup.py 0.10.1 (2020-11-27) general fix : remove debug print in \"package-url\" check 0.10.0 (2020-11-27) general feature : packages now inherit the monorepos license if it is unset (using PackageModel.get_license()) feature : If a package inherits the monoreop license, the LICENSE file will not be replicated in the package directory but instead be copied from the monorepo (using _tempcopy() in setup.py ) feature : shut {mono,pkg} update commands now produce a LICENSE.txt file if a license template exists for the specified license (currently only MIT ) feature : packages now inherit the monorepo author and url , and version if release.single_version == True feature : add \"shut pkg format\" command feature : package author and url are now inherited from the monorepo 0.9.0 (2020-11-20) checks feature : Add check for namespace files cli fix : Fix shut mono bump not updating requirements in package setup.py if packages have inter dependencies (#7) feature : shut pkg install now supports $.install.index-url and $.install.extra-index-urls , added a --pipx option general fix : fix order of dependencies in the same mono repository when using shut pkg install shut.model.package feature : Add $.install.index-url and $.install.extra-index-urls fields 0.8.0 (2020-09-09) cli feature : Add shut ... test --keep-test-env option feature : Support skipped tests shut ... test output shut.test.base feature : Add TestStatus.SKIPPED enumeration value shut.test.pytest fix : Support skipped tests instead of failing ungracefully 0.7.3 (2020-09-09) cli fix : Fix AttributeError when running shut mono bump --snapshot 0.7.2 (2020-09-08) cli fix : Fix shut pkg install command 0.7.1 (2020-09-08) cli fix : shut mono install now uses topological order to retrieve package requirements shore.models.monorepo feature : Add Monorepo.get_inter_dependencies_graph() 0.7.0 (2020-09-08) cli change : Removed -a,--all flag from shut mono update , the command now always behaves like that flag is set feature : Add shut mono update flags --verify and --verify-tag feature : Add shut mono install command shut.renderers.setuptools fix : Fix rendering of extras_require 0.6.0 (2020-09-08) cli feature : shut ... bump command without version argument or bump mode option will determine the bump mode from the unreleased changelog change : shut pkg build and shut pkg publish will now error if the package uses vendored requirements feature : shut pkg requirements add now supports adding vendored requirements using the -v,--vendor option feature : Add --verify option to shut pkg update feature : shut pkg install now supports installing vendored requirements feature : shut pkg bump now prevents bumping if managed files are outdated fix : shut pkg bump now prevents bumping if package version is managed by a monorepo single-version (as was previously already expected to happen) improvement : shut mono bump now includes the packages in the mono repo if $.release.single-version is enabled feature : Add shut mono publish command which delegates to shut pkg publish . shore.model improvement : dump() method now uses nr.fs.atomic_file to ensure the original file contents are not modified if the dump operation fails shore.model.requirements change : Add BaseRequirement and VendoredRequirement classes, require databind.core and databind.json ^0.4.0 for the @datamodel(serialize_as) feature shut.changelog feature : Add breaking_change Changelog type shut.checkers change : Change Checkers interface (remove project argument) shut.checkers.monorepo change : remove bad-package-directory check again, having a package name differ from the directory name is a valid use case shut.checkers.package feature : Add up to date check for packages shut.model.package feature : Package.requirements and related properties are now of type BaseRequirement , allowing the use of VendoredRequirement s change : Use new RequirementsList class instead of List[BaseRequirement] shut.model.requirements feature : Requirement now supports package extras shut.publishers.warehouse change : The WarehouseProvider now uses the new PackageModel.get_publish_conf() instead of PackageModel.publish directly, allowing packages to inherit the publish configuration of the mono repository shut.renderers.setuptools fix : Fix error when package author was not set 0.5.5 (2020-09-05) cli improvement : shut mono test now prints a summary of the status for every tested package shut.test.pytest change : set altname for PytestDriver.report_file to report-file 0.5.4 (2020-09-05) cli feature : Add shut mono test --only option shut.test.pytest change : PytestDriver.args option now defaults to [\"-vv\"] 0.5.3 (2020-09-05) cli feature : Support VIRTUALENV and PIP environment variables in shut pkg test and shut mono test 0.5.2 (2020-09-05) cli feature : add --checks/--no-checks toggle to shut pkg and shut mono commands shut.test.pytest fix : Fix parsing of Pytest JSON record for test functions from a unittest.TestCase subclass 0.5.1 (2020-09-05) cli fix : fix running \"shut pkg install\" from inside \"shut pkg test --isolate\" call 0.5.0 (2020-09-05) cli change : shut mono bump and shut pkg bump no longer run checks, the command group already does it feature : add shut pkg test command which and PackageModel.test_driver configuration, the shore.test sub-package implements test drivers (currently just pytest ) feature : add shut mono test command shore.checkers.package change : package-author check is now an error level check shut.model.package change : Remove PackageData class, merge it's members into PackageModel (this does not change the interface of PackageModel ), Removed PackageModel.data property shut.renderers.setuptools fix : fix rendering of python_requires option in setup.py if package is universal (i.e. the python requirement uses an OR (|) which we cannot currently translate to setuptools correctly) tests fix : fix unit tests 0.4.0 (2020-09-04) cli change : Updated temrinal output of shut ... checks improvement : shut pkg checks now inherits checks from the Monorepo if the check result targets the package directly (e.g. the bad-package-directory check) change : shut pkg and shut mono commands will now print failed checks to stderr before executing the requested subcommand. change : no longer set PYTHONWARNINGS environment variable feature : add shut pkg install command shut.checkers.core improvement : Add CheckResult.subject member (default: None ) shut.checkers.generic improvement : unknown-config-options check no longer shows if it passes improvement : rename unknown-config check to unknown-config-options shut.checkers.monorepo improvement : Add bad-package-directory check to Monorepo checker improvement : include error message in invalid-package check result shut.model.monorepo change : add Monorepo.get_inter_dependencies_for() method shut.model.package change : Add PackageError exception class 0.3.0 (2020-08-29) general improvement : update Changelog typing for databind improvement : update paths printed in shut ... bump when changelog is released 0.2.0 (2020-08-29) docs fix : fix README example","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#0210-2021-09-18","text":"general feature : add $.scripts in package.yml and shut pkg run command","title":"0.21.0 (2021-09-18)"},{"location":"changelog/#0200-2021-09-16","text":"general feature : add shut init command group with initial shut init mkdocs command feature : add documentation job in GitHub Actions template feature : ignore GitHub Actions template when checking package config in GitHub Actions (this is mainly used when using an unreleased version of shut to generate the action template or when needing to do quick modifications to the action config without triggering the shut checks in CI).","title":"0.20.0 (2021-09-16)"},{"location":"changelog/#0190-2021-09-15","text":"general change : Changelog entry fixes is now optional change : switch to Mako as a template engine from Jinja2 feature : add $.templates to AbstractProjectModel and the github- actions template change : shut pkg new now adds the github-template to the generated package.yml change : remove template rendering capability of pylint test driver, instead add pylintrc template plugin","title":"0.19.0 (2021-09-15)"},{"location":"changelog/#0182-2021-09-04","text":"general fix : min click version must be 7.1 for no_args_is_help option, also allow 8.x","title":"0.18.2 (2021-09-04)"},{"location":"changelog/#0181-2021-08-27","text":"general fix : fix added in 0.18.0 for #33 is actually incorrect, the command variable was needed when using the _tempcopy() feature. now it is fixed for good (#33)","title":"0.18.1 (2021-08-27)"},{"location":"changelog/#0180-2021-08-26","text":"general feature : add pylint test driver fix : the fix from 0.17.4 actually made the install cache not work at all and just always install test requirements, now shut knows per driver selection whether dependencies have been installed before or not feature : test drivers are now loaded via the shut.test_drivers entrypoint, allowing plugins to be registered from external packages feature : pylint now comes with .pylintrc templates (only shut for now) and can also render templates from HTTP(S) URLs feature : Shut now recognizes lowercase readme/license files (#31) fix : render command variable into setup.py only if package $.install.hooks is used (#33) internal feature : add AbstractProjectModel.get_auxiliary_renderers()","title":"0.18.0 (2021-08-26)"},{"location":"changelog/#0174-2021-08-20","text":"general fix : fix missing test-requirements installation with shut mono|pkg test --isolate if the comand was run previously","title":"0.17.4 (2021-08-20)"},{"location":"changelog/#0173-2021-08-20","text":"general fix : shut mono|pkg test --isolate no longer installs the main package in develop mode","title":"0.17.3 (2021-08-20)"},{"location":"changelog/#0172-2021-08-14","text":"general fix : shut mono|pkg update --verify-tag \"\" does not show an error when it should feature : shut mono|pkg update --verify-tag now accepts strings prefixed with refs/tags/ and strips that prefix (useful for GitHub Actions to use the $GITHUB_REF variable) fix : shut pkg update --dry option not respected","title":"0.17.2 (2021-08-14)"},{"location":"changelog/#0171-2021-08-13","text":"general change : dd shut mono|pkg test -q,--quiet option to quietly install test requirements with Pip, changed default to not do silent installs","title":"0.17.1 (2021-08-13)"},{"location":"changelog/#0170-2021-08-13","text":"api feature : add Package.get_source_directory() general feature : add shut pkg test --install/--no-install which will default to --install if the current Python installation (determined by the PYTHON variable or falling back to just the python command) is a virtual env feature : add support for a mypy test driver feature : add $.test-drivers field in package model and deprecate $.test- driver for it. feature : add shut mono test --install/--no-install option (parallel to the existing option for shut pkg test ), without the flag test requirements are only installed if Shut did not install the same requirements into the same environment before feature : make sure $.test-requirements are installed when running shut mono|pkg test in addition to the test-driver requirements. Update some output formatting of shut mono|pkg test fix : lines in MANIFEST.in outside the shut-specific block are not kept on shut pkg update (fixed in VirtualFiles.write_all() ) fix : package $.author data can now be de-serialized from a mapping again (as used to be possible before migrating to databind.core^1.x fix : fix printing of Failed test details: when there were no failures but at least one skipped test case feature : pytest driver now supports a $.parallelism option which automatically pulls in pytest-xdist as a test requirement feature : shut mono|pkg bump --tag|--push|--dry options now have short versions -t|-p|-d respectively","title":"0.17.0 (2021-08-13)"},{"location":"changelog/#0161-2021-08-12","text":"general fix : pass filename to databind deserializer when loading monorepo/package configuration files fix : Cannot run \"pip install\" without develop mode on package that inherits monorepo license (#22)","title":"0.16.1 (2021-08-12)"},{"location":"changelog/#0160-2021-08-10","text":"general fix : fix missing import for typing.Dict in pytest driver module, which could in some Python versions result in a NameError change : add extra_requires[test] in generated setup.py fix : fix setup.py rendering for inherit license files (#21) change : _tempcopy() function in setup.py now fails if the file cannot be copied from the source file","title":"0.16.0 (2021-08-10)"},{"location":"changelog/#0151-2021-08-09","text":"general feature : add BSD2, BSD3, BSD4 and Apache2 license templates (@ndjeong)","title":"0.15.1 (2021-08-09)"},{"location":"changelog/#0150-2021-08-09","text":"general feature : add shut mono|pkg status --json --include-config options","title":"0.15.0 (2021-08-09)"},{"location":"changelog/#0143-2021-08-08","text":"general fix : fix VendoredRequirement._normpath() which corrupted absolute paths on Windows (e.g. C:/path/to would be converted to ./C:\\path\\to when it should just be C:\\path\\to ). This caused shut pkg install on Windows to fail. fix : No module named setuptools error when using shut pkg install in venv on Windows (#16) fix : fix additional CR in generated LICENSE.txt on Windows when installing Shut from source (#17) fix : py.typed file is rendered into MANIFEST.in with backslashes","title":"0.14.3 (2021-08-08)"},{"location":"changelog/#0142-2021-08-03","text":"general change : update how install hooks are rendered into setup.py","title":"0.14.2 (2021-08-03)"},{"location":"changelog/#0141-2021-07-23","text":"general fix : TypeError when using --extra and --dev/--test","title":"0.14.1 (2021-07-23)"},{"location":"changelog/#0140-2021-07-22","text":"general feature : add --dev/--no-dev and --test/--no-test options to shut mono install and shut pkg install","title":"0.14.0 (2021-07-22)"},{"location":"changelog/#0133-2021-06-20","text":"general fix : exclude python requirements when rendering requirements.txt","title":"0.13.3 (2021-06-20)"},{"location":"changelog/#0132-2021-06-20","text":"general fix : fix format of requirements in requirements.txt","title":"0.13.2 (2021-06-20)"},{"location":"changelog/#0131-2021-06-20","text":"general fix : also install PackageModel.test_requirements on shut pkg install","title":"0.13.1 (2021-06-20)"},{"location":"changelog/#0130-2021-06-20","text":"general feature : add PackageModel.dev_requirements which will be installed with shut pkg install feature : add PackageModel.render_requirements_txt which will be rendered with shut pkg update","title":"0.13.0 (2021-06-20)"},{"location":"changelog/#0120-2021-06-08","text":"general change : allow running Shut via python -m shut fix : fix call to run_install() in shut mono install","title":"0.12.0 (2021-06-08)"},{"location":"changelog/#0114-2021-02-01","text":"general fix : shut pkg install now correctly installs transitive package interdependencies in the right order","title":"0.11.4 (2021-02-01)"},{"location":"changelog/#0113-2021-01-29","text":"general fix : fix error rendering setup.py if the license file did not exist feature : add get-version command to shut mono and shut pkg fix : shut pkg requirements add now adds the InstallConfiguration pip args","title":"0.11.3 (2021-01-29)"},{"location":"changelog/#0112-2020-12-19","text":"general fix : fix license_file relative path generation in setuptools renderer, now correctly inherits the license file from the monorepo","title":"0.11.2 (2020-12-19)"},{"location":"changelog/#0111-2020-12-04","text":"general fix : fix error in setuptools renderer if no license is configured in the package","title":"0.11.1 (2020-12-04)"},{"location":"changelog/#0110-2020-12-03","text":"general feature : add $.package-data field to package.yml fix : add missing package data that needs to be packaged with shut","title":"0.11.0 (2020-12-03)"},{"location":"changelog/#0103-2020-11-27","text":"general fix : referencing a LICENSE or README outside the package directory now does not fail on install if the source file does not exist, but it will print a warning","title":"0.10.3 (2020-11-27)"},{"location":"changelog/#0102-2020-11-27","text":"general fix : add PackageModel.license_file and fix license rendering into MANIFEST.in and setup.py","title":"0.10.2 (2020-11-27)"},{"location":"changelog/#0101-2020-11-27","text":"general fix : remove debug print in \"package-url\" check","title":"0.10.1 (2020-11-27)"},{"location":"changelog/#0100-2020-11-27","text":"general feature : packages now inherit the monorepos license if it is unset (using PackageModel.get_license()) feature : If a package inherits the monoreop license, the LICENSE file will not be replicated in the package directory but instead be copied from the monorepo (using _tempcopy() in setup.py ) feature : shut {mono,pkg} update commands now produce a LICENSE.txt file if a license template exists for the specified license (currently only MIT ) feature : packages now inherit the monorepo author and url , and version if release.single_version == True feature : add \"shut pkg format\" command feature : package author and url are now inherited from the monorepo","title":"0.10.0 (2020-11-27)"},{"location":"changelog/#090-2020-11-20","text":"checks feature : Add check for namespace files cli fix : Fix shut mono bump not updating requirements in package setup.py if packages have inter dependencies (#7) feature : shut pkg install now supports $.install.index-url and $.install.extra-index-urls , added a --pipx option general fix : fix order of dependencies in the same mono repository when using shut pkg install shut.model.package feature : Add $.install.index-url and $.install.extra-index-urls fields","title":"0.9.0 (2020-11-20)"},{"location":"changelog/#080-2020-09-09","text":"cli feature : Add shut ... test --keep-test-env option feature : Support skipped tests shut ... test output shut.test.base feature : Add TestStatus.SKIPPED enumeration value shut.test.pytest fix : Support skipped tests instead of failing ungracefully","title":"0.8.0 (2020-09-09)"},{"location":"changelog/#073-2020-09-09","text":"cli fix : Fix AttributeError when running shut mono bump --snapshot","title":"0.7.3 (2020-09-09)"},{"location":"changelog/#072-2020-09-08","text":"cli fix : Fix shut pkg install command","title":"0.7.2 (2020-09-08)"},{"location":"changelog/#071-2020-09-08","text":"cli fix : shut mono install now uses topological order to retrieve package requirements shore.models.monorepo feature : Add Monorepo.get_inter_dependencies_graph()","title":"0.7.1 (2020-09-08)"},{"location":"changelog/#070-2020-09-08","text":"cli change : Removed -a,--all flag from shut mono update , the command now always behaves like that flag is set feature : Add shut mono update flags --verify and --verify-tag feature : Add shut mono install command shut.renderers.setuptools fix : Fix rendering of extras_require","title":"0.7.0 (2020-09-08)"},{"location":"changelog/#060-2020-09-08","text":"cli feature : shut ... bump command without version argument or bump mode option will determine the bump mode from the unreleased changelog change : shut pkg build and shut pkg publish will now error if the package uses vendored requirements feature : shut pkg requirements add now supports adding vendored requirements using the -v,--vendor option feature : Add --verify option to shut pkg update feature : shut pkg install now supports installing vendored requirements feature : shut pkg bump now prevents bumping if managed files are outdated fix : shut pkg bump now prevents bumping if package version is managed by a monorepo single-version (as was previously already expected to happen) improvement : shut mono bump now includes the packages in the mono repo if $.release.single-version is enabled feature : Add shut mono publish command which delegates to shut pkg publish . shore.model improvement : dump() method now uses nr.fs.atomic_file to ensure the original file contents are not modified if the dump operation fails shore.model.requirements change : Add BaseRequirement and VendoredRequirement classes, require databind.core and databind.json ^0.4.0 for the @datamodel(serialize_as) feature shut.changelog feature : Add breaking_change Changelog type shut.checkers change : Change Checkers interface (remove project argument) shut.checkers.monorepo change : remove bad-package-directory check again, having a package name differ from the directory name is a valid use case shut.checkers.package feature : Add up to date check for packages shut.model.package feature : Package.requirements and related properties are now of type BaseRequirement , allowing the use of VendoredRequirement s change : Use new RequirementsList class instead of List[BaseRequirement] shut.model.requirements feature : Requirement now supports package extras shut.publishers.warehouse change : The WarehouseProvider now uses the new PackageModel.get_publish_conf() instead of PackageModel.publish directly, allowing packages to inherit the publish configuration of the mono repository shut.renderers.setuptools fix : Fix error when package author was not set","title":"0.6.0 (2020-09-08)"},{"location":"changelog/#055-2020-09-05","text":"cli improvement : shut mono test now prints a summary of the status for every tested package shut.test.pytest change : set altname for PytestDriver.report_file to report-file","title":"0.5.5 (2020-09-05)"},{"location":"changelog/#054-2020-09-05","text":"cli feature : Add shut mono test --only option shut.test.pytest change : PytestDriver.args option now defaults to [\"-vv\"]","title":"0.5.4 (2020-09-05)"},{"location":"changelog/#053-2020-09-05","text":"cli feature : Support VIRTUALENV and PIP environment variables in shut pkg test and shut mono test","title":"0.5.3 (2020-09-05)"},{"location":"changelog/#052-2020-09-05","text":"cli feature : add --checks/--no-checks toggle to shut pkg and shut mono commands shut.test.pytest fix : Fix parsing of Pytest JSON record for test functions from a unittest.TestCase subclass","title":"0.5.2 (2020-09-05)"},{"location":"changelog/#051-2020-09-05","text":"cli fix : fix running \"shut pkg install\" from inside \"shut pkg test --isolate\" call","title":"0.5.1 (2020-09-05)"},{"location":"changelog/#050-2020-09-05","text":"cli change : shut mono bump and shut pkg bump no longer run checks, the command group already does it feature : add shut pkg test command which and PackageModel.test_driver configuration, the shore.test sub-package implements test drivers (currently just pytest ) feature : add shut mono test command shore.checkers.package change : package-author check is now an error level check shut.model.package change : Remove PackageData class, merge it's members into PackageModel (this does not change the interface of PackageModel ), Removed PackageModel.data property shut.renderers.setuptools fix : fix rendering of python_requires option in setup.py if package is universal (i.e. the python requirement uses an OR (|) which we cannot currently translate to setuptools correctly) tests fix : fix unit tests","title":"0.5.0 (2020-09-05)"},{"location":"changelog/#040-2020-09-04","text":"cli change : Updated temrinal output of shut ... checks improvement : shut pkg checks now inherits checks from the Monorepo if the check result targets the package directly (e.g. the bad-package-directory check) change : shut pkg and shut mono commands will now print failed checks to stderr before executing the requested subcommand. change : no longer set PYTHONWARNINGS environment variable feature : add shut pkg install command shut.checkers.core improvement : Add CheckResult.subject member (default: None ) shut.checkers.generic improvement : unknown-config-options check no longer shows if it passes improvement : rename unknown-config check to unknown-config-options shut.checkers.monorepo improvement : Add bad-package-directory check to Monorepo checker improvement : include error message in invalid-package check result shut.model.monorepo change : add Monorepo.get_inter_dependencies_for() method shut.model.package change : Add PackageError exception class","title":"0.4.0 (2020-09-04)"},{"location":"changelog/#030-2020-08-29","text":"general improvement : update Changelog typing for databind improvement : update paths printed in shut ... bump when changelog is released","title":"0.3.0 (2020-08-29)"},{"location":"changelog/#020-2020-08-29","text":"docs fix : fix README example","title":"0.2.0 (2020-08-29)"},{"location":"configuration/","text":"Configuration Shut uses YAML configuration files to configure Python packages and monorepositories. When invoking the shut CLI, the configuration file for the entity you want to work with must be in your current working directory (ie. package.yml when using shut pkg and monorepo.yml when using shut mono ). Configuration files may use the .yaml suffix instead of .yml . package.yml Package Metadata Example name: my-package version: 0.1.0 description: This is my package. license: MIT author: Me <me@me.org> url: https://github.com/me/my-package readme: README.md # default license_file: LICENSE.txt # default classifiers: [] # default keywords: [] # default Fields name \u2013 The name of the package. This name is also passed to the setuptools.set(name) parameter in the generated setup.py file. version \u2013 The version of the package. This field may be unset if the package is part of a single-version monorepository. A semantic version should be used here (e.g. 0.0.1 , 1.4.2.post1 or 52.0.1.rc4 ). Checks Shut checks if the version given here matches the __version__ in your package's main source file (e.g. either the __init__.py of your package or your module file in case of a single-module package). author \u2013 The author of the package, either as a string in the form First Last <mail@email.org> or in the form of a mapping as in {name: \"First Last\", email: \"mail@email.org\"} . Checks Similar to the check for version , Shut will check that the author given here matches the __author__ given in your package's main source file. license \u2013 An SPDX Open Source license identifier for the license of the package. Checks Shut delivers license templates for some known license identifiers (e.g. MIT , BSD2 , BSD3 , Apache2 ) and will use it to generate a LICENSE.txt file for you. If the content of the current LICENSE.txt file does not match with the template or if the file does not exist, a check will indicate this. description \u2013 A short description for the package which is included in the package metadata when publishing. readme \u2013 The path to the readme file relative to the package.yml configuration file. If the path points to a parent directory, Shut will generate code in setup.py to temporarily copy the readme into the package directory during distribution to ensure the readme is included in the archive(s). Defaults to the first file of the following list that exists in the same directory: README.md , README.rst , README.txt , README . (See PackageModel.get_readme_file() ) Checks A check will trigger if the readme file does not exist. license_file \u2013 The path to the license file relative to the package.yml configuration file. Similar to the readme option, if the license_file points to a file not in the same project directory, Shut will generate code to temporarily copy the file into the package directory during distribution building. Defaults to the first file of the following list that exists in the same directory: LICENSE , LICENSE.txt , LICENSE.rst , LICENSE.md . If the package is part of a monorepository and the monorepository has a license file, it will default to that license file instead. (See PackageModel.get_license_file() ) Checks A check will trigger if the license file does not exist. classifiers \u2013 A list of classifiers for the package. Defaults to an empty list. Checks A check will trigger if any of the listed classifiers are not known as per the the PyPI classifiers reference . keywords \u2013 A list of keywords for the package. Defaults to an empty list. Code Runtime Example modulename: my_package source-directory: src # default typed: True requirements: - python ^2.7|^3.5 - requests ^2.22.0 test-requirements: - pandas extra-requirements: pdf: - pyPdf ~1.13 dev-requirements: - pylint render-requirements-txt: False # default Fields Todo Packaging Example exclude: ['test', 'tests', 'docs'] # default entrypoints: console_scripts: - my-cli = my_package.__main__:main package-data: - include: data/ssl.pem - exclude: data/generated install: hooks: before-install: - echo \"Before install!\" after-install: - echo \"After install!\" index-url: https://pypi.org/simple extra-index-urls: - https://test.pypi.org/simple publish: pypi: enabled: true # default credentials: username: __token__ password: '$PYPI_PASSWORD' Fields Todo Testing Example test-drivers: - type: pytest parallelism: 8 - type: mypy Fields Todo Releasing Example changelog: directory: '.changelog' # default release: tag-format: '{version}' # default Fields changelog.directory \u2013 The directory where shut changelog reads and writes changelog files to. release.tag-format \u2013 The template string used to construct the tag name for shut pkg bump --tag . If the package is part of a monorepository, {name}@ is automatically prefixed to the value of this field (and {name} expands to the package name). monorepo.yml Monorepositories are configured with a monorepo.yml file. Packages in the repository must be in folder directly next to the configuration file. Many commands from shut pkg are also available for shut mono and will apply over all packages in the monorepository. Many of the fields in the monorepository configuration will remind you of those from package.yml . In fact some of these fields (indicated with *) are inherited by packages in a monorepository if they are not set in the package itself. Example name: my-monorepo version: 0.1.0 author: name: First Last email: mail@email.org license: MIT license_file: LICENSE.txt # default url: https://github.com/me/my-monorepo changelog: directory: '.changelog' release: tag-format: '{version}' # default single-version: true publish: ... # same as package.yml Fields name \u2013 The name of the monorepository. This is not actually used in a lot of places. version \u2013 The version of the monorepository. Should only be set for monorepository where release.single-version is enabled. author * \u2013 The author of the monorepository. license * \u2013 The license of the monorepository. license_file * \u2013 The license file of the monorepository. url * \u2013 The URL where the monorepository source code can be found. changelog.directory \u2013 The directory where shut changelog reads and writes changelog files to. release.tag-format \u2013 The template string used to construct the tag name for shut pkg bump --tag . The tag format is only used if release.single-version is enabled. release.single-version \u2013 If enabled, enforce a consistent version number across all packages in the monorepository. shut mono bump can be used to uniformly bump the version across all packages. The --tag option will create a tag for the entire monorepository (instead of for each package individually). publish * \u2013 The publish configuration for packages in the monorepository.","title":"Configuration"},{"location":"configuration/#configuration","text":"Shut uses YAML configuration files to configure Python packages and monorepositories. When invoking the shut CLI, the configuration file for the entity you want to work with must be in your current working directory (ie. package.yml when using shut pkg and monorepo.yml when using shut mono ). Configuration files may use the .yaml suffix instead of .yml .","title":"Configuration"},{"location":"configuration/#packageyml","text":"","title":"package.yml"},{"location":"configuration/#package-metadata","text":"Example name: my-package version: 0.1.0 description: This is my package. license: MIT author: Me <me@me.org> url: https://github.com/me/my-package readme: README.md # default license_file: LICENSE.txt # default classifiers: [] # default keywords: [] # default Fields name \u2013 The name of the package. This name is also passed to the setuptools.set(name) parameter in the generated setup.py file. version \u2013 The version of the package. This field may be unset if the package is part of a single-version monorepository. A semantic version should be used here (e.g. 0.0.1 , 1.4.2.post1 or 52.0.1.rc4 ). Checks Shut checks if the version given here matches the __version__ in your package's main source file (e.g. either the __init__.py of your package or your module file in case of a single-module package). author \u2013 The author of the package, either as a string in the form First Last <mail@email.org> or in the form of a mapping as in {name: \"First Last\", email: \"mail@email.org\"} . Checks Similar to the check for version , Shut will check that the author given here matches the __author__ given in your package's main source file. license \u2013 An SPDX Open Source license identifier for the license of the package. Checks Shut delivers license templates for some known license identifiers (e.g. MIT , BSD2 , BSD3 , Apache2 ) and will use it to generate a LICENSE.txt file for you. If the content of the current LICENSE.txt file does not match with the template or if the file does not exist, a check will indicate this. description \u2013 A short description for the package which is included in the package metadata when publishing. readme \u2013 The path to the readme file relative to the package.yml configuration file. If the path points to a parent directory, Shut will generate code in setup.py to temporarily copy the readme into the package directory during distribution to ensure the readme is included in the archive(s). Defaults to the first file of the following list that exists in the same directory: README.md , README.rst , README.txt , README . (See PackageModel.get_readme_file() ) Checks A check will trigger if the readme file does not exist. license_file \u2013 The path to the license file relative to the package.yml configuration file. Similar to the readme option, if the license_file points to a file not in the same project directory, Shut will generate code to temporarily copy the file into the package directory during distribution building. Defaults to the first file of the following list that exists in the same directory: LICENSE , LICENSE.txt , LICENSE.rst , LICENSE.md . If the package is part of a monorepository and the monorepository has a license file, it will default to that license file instead. (See PackageModel.get_license_file() ) Checks A check will trigger if the license file does not exist. classifiers \u2013 A list of classifiers for the package. Defaults to an empty list. Checks A check will trigger if any of the listed classifiers are not known as per the the PyPI classifiers reference . keywords \u2013 A list of keywords for the package. Defaults to an empty list.","title":"Package Metadata"},{"location":"configuration/#code-runtime","text":"Example modulename: my_package source-directory: src # default typed: True requirements: - python ^2.7|^3.5 - requests ^2.22.0 test-requirements: - pandas extra-requirements: pdf: - pyPdf ~1.13 dev-requirements: - pylint render-requirements-txt: False # default Fields Todo","title":"Code Runtime"},{"location":"configuration/#packaging","text":"Example exclude: ['test', 'tests', 'docs'] # default entrypoints: console_scripts: - my-cli = my_package.__main__:main package-data: - include: data/ssl.pem - exclude: data/generated install: hooks: before-install: - echo \"Before install!\" after-install: - echo \"After install!\" index-url: https://pypi.org/simple extra-index-urls: - https://test.pypi.org/simple publish: pypi: enabled: true # default credentials: username: __token__ password: '$PYPI_PASSWORD' Fields Todo","title":"Packaging"},{"location":"configuration/#testing","text":"Example test-drivers: - type: pytest parallelism: 8 - type: mypy Fields Todo","title":"Testing"},{"location":"configuration/#releasing","text":"Example changelog: directory: '.changelog' # default release: tag-format: '{version}' # default Fields changelog.directory \u2013 The directory where shut changelog reads and writes changelog files to. release.tag-format \u2013 The template string used to construct the tag name for shut pkg bump --tag . If the package is part of a monorepository, {name}@ is automatically prefixed to the value of this field (and {name} expands to the package name).","title":"Releasing"},{"location":"configuration/#monorepoyml","text":"Monorepositories are configured with a monorepo.yml file. Packages in the repository must be in folder directly next to the configuration file. Many commands from shut pkg are also available for shut mono and will apply over all packages in the monorepository. Many of the fields in the monorepository configuration will remind you of those from package.yml . In fact some of these fields (indicated with *) are inherited by packages in a monorepository if they are not set in the package itself. Example name: my-monorepo version: 0.1.0 author: name: First Last email: mail@email.org license: MIT license_file: LICENSE.txt # default url: https://github.com/me/my-monorepo changelog: directory: '.changelog' release: tag-format: '{version}' # default single-version: true publish: ... # same as package.yml Fields name \u2013 The name of the monorepository. This is not actually used in a lot of places. version \u2013 The version of the monorepository. Should only be set for monorepository where release.single-version is enabled. author * \u2013 The author of the monorepository. license * \u2013 The license of the monorepository. license_file * \u2013 The license file of the monorepository. url * \u2013 The URL where the monorepository source code can be found. changelog.directory \u2013 The directory where shut changelog reads and writes changelog files to. release.tag-format \u2013 The template string used to construct the tag name for shut pkg bump --tag . The tag format is only used if release.single-version is enabled. release.single-version \u2013 If enabled, enforce a consistent version number across all packages in the monorepository. shut mono bump can be used to uniformly bump the version across all packages. The --tag option will create a tag for the entire monorepository (instead of for each package individually). publish * \u2013 The publish configuration for packages in the monorepository.","title":"monorepo.yml"},{"location":"publishing-guide/","text":"Publishing with Shut Todo : Describe publishing in more detail. By default, every package is configured to publish to PyPI using the warehouse:pypi publishing target. A test publish to test.pypi.org can be performed by using the --test option when using the shut pkg publish command. Automate publishing in CI checls You can specify the username and password in the config as environment variables. Most CI systems allow you to securely store a secret as an environment variable. name: my-package # ... publish: pypi: credentials: username: __token__ password: '$PYPI_TOKEN' test_username: __token__ test_password: '$TESTPYPI_TOKEN' When you're ready to publish from the CI checks, make it run the following commands: - pip install shut - shut pkg update --verify-tag \"$CI_TAG\" - shut pkg publish warehouse:pypi It is also recommended that you add a trial-publish step. Note that we add the --allow-empty-tag to flag to allow that the value passed to --verify-tag can be empty. This is important because most commits won't be tagged during development. - pip install shut - shut pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - shut pkg publish warehouse:pypi --test Publishing Snapshots The bump command can be used with the --snapshot option to update the version to one that indicates the Git commit distance since the last tagged version. This is useful to publish development snapshots. Note that PyPI/Warehouse does not actually (yet?) support snapshot version numbers. If you want to publish snapshots, you need an alternative package registry such as Artifactory). - shut pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - shut pkg bump --snapshot - shut pkg publish warehouse:pypi --test Important : Many CI systems may not fetch tags when cloning your repository. This means bump --snapshot can not figure out the commit distance and the generated snapshot version number will begin with 0.0.0 . If you encounter this issue, run git fetch --tags before Shut. If you do try to use snapshot versions with PyPI, you will see this type of error: HTTPError: 400 Bad Request from https://test.pypi.org/legacy/ '0.17.1+1.g986bed6' is an invalid value for Version. Error: Can't use PEP 440 local versions. See https://packaging.python.org/specifications/core-metadata for more information.","title":"Publishing with Shut"},{"location":"publishing-guide/#publishing-with-shut","text":"Todo : Describe publishing in more detail. By default, every package is configured to publish to PyPI using the warehouse:pypi publishing target. A test publish to test.pypi.org can be performed by using the --test option when using the shut pkg publish command.","title":"Publishing with Shut"},{"location":"publishing-guide/#automate-publishing-in-ci-checls","text":"You can specify the username and password in the config as environment variables. Most CI systems allow you to securely store a secret as an environment variable. name: my-package # ... publish: pypi: credentials: username: __token__ password: '$PYPI_TOKEN' test_username: __token__ test_password: '$TESTPYPI_TOKEN' When you're ready to publish from the CI checks, make it run the following commands: - pip install shut - shut pkg update --verify-tag \"$CI_TAG\" - shut pkg publish warehouse:pypi It is also recommended that you add a trial-publish step. Note that we add the --allow-empty-tag to flag to allow that the value passed to --verify-tag can be empty. This is important because most commits won't be tagged during development. - pip install shut - shut pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - shut pkg publish warehouse:pypi --test","title":"Automate publishing in CI checls"},{"location":"publishing-guide/#publishing-snapshots","text":"The bump command can be used with the --snapshot option to update the version to one that indicates the Git commit distance since the last tagged version. This is useful to publish development snapshots. Note that PyPI/Warehouse does not actually (yet?) support snapshot version numbers. If you want to publish snapshots, you need an alternative package registry such as Artifactory). - shut pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - shut pkg bump --snapshot - shut pkg publish warehouse:pypi --test Important : Many CI systems may not fetch tags when cloning your repository. This means bump --snapshot can not figure out the commit distance and the generated snapshot version number will begin with 0.0.0 . If you encounter this issue, run git fetch --tags before Shut. If you do try to use snapshot versions with PyPI, you will see this type of error: HTTPError: 400 Bad Request from https://test.pypi.org/legacy/ '0.17.1+1.g986bed6' is an invalid value for Version. Error: Can't use PEP 440 local versions. See https://packaging.python.org/specifications/core-metadata for more information.","title":"Publishing Snapshots"}]}