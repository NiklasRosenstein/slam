{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Slam documentation! Slam is a CLI that provides utilities for developing on Python projects. It works well with Poetry projects in particular, but you're not required to use it. Slam (version 1.0.7) Usage: command [options] [arguments] Options: -h, --help Display help for the given command. When no command is given display help for the help command. -q, --quiet Do not output any message. -V, --version Display this application version. --ansi Force ANSI output. --no-ansi Disable ANSI output. -n, --no-interaction Do not ask any interactive question. -v|vv|vvv, --verbose Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug. Available commands: check Run sanity checks on your Python project. help Displays help for a command. info Show info about the Slam application workspace and the loaded projects. install Install your project and its dependencies via Pip. link Symlink your Python package with the help of Flit. publish A wrapper to publish the Python project to a repository such as PyPI. release Create a new release of your Python package. test Execute commands configured in [tool.slam.test]. changelog changelog add Add an entry to the unreleased changelog via the CLI. changelog convert Convert Slam's old YAML based changelogs to new style TOML changelogs. changelog format Format the changelog in the terminal or in Markdown format. changelog update-pr Update the pr field of changelog entries in a commit range. Installation It is recommended to install Slam via Pipx, but you can also install it with Pip directly. $ pipx install slam-cli Note : Currently, Slam relies on an alpha version of poetry-core ( ^1.1.0a6 ). If you install it into the same environment as Poetry itself, you may also need to use an alpha version of Poetry (e.g. 1.2.0a2 ). Copyright \u00a9 2022 Niklas Rosenstein","title":"Welcome to the Slam documentation!"},{"location":"#welcome-to-the-slam-documentation","text":"Slam is a CLI that provides utilities for developing on Python projects. It works well with Poetry projects in particular, but you're not required to use it. Slam (version 1.0.7) Usage: command [options] [arguments] Options: -h, --help Display help for the given command. When no command is given display help for the help command. -q, --quiet Do not output any message. -V, --version Display this application version. --ansi Force ANSI output. --no-ansi Disable ANSI output. -n, --no-interaction Do not ask any interactive question. -v|vv|vvv, --verbose Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug. Available commands: check Run sanity checks on your Python project. help Displays help for a command. info Show info about the Slam application workspace and the loaded projects. install Install your project and its dependencies via Pip. link Symlink your Python package with the help of Flit. publish A wrapper to publish the Python project to a repository such as PyPI. release Create a new release of your Python package. test Execute commands configured in [tool.slam.test]. changelog changelog add Add an entry to the unreleased changelog via the CLI. changelog convert Convert Slam's old YAML based changelogs to new style TOML changelogs. changelog format Format the changelog in the terminal or in Markdown format. changelog update-pr Update the pr field of changelog entries in a commit range.","title":"Welcome to the Slam documentation!"},{"location":"#installation","text":"It is recommended to install Slam via Pipx, but you can also install it with Pip directly. $ pipx install slam-cli Note : Currently, Slam relies on an alpha version of poetry-core ( ^1.1.0a6 ). If you install it into the same environment as Poetry itself, you may also need to use an alpha version of Poetry (e.g. 1.2.0a2 ). Copyright \u00a9 2022 Niklas Rosenstein","title":"Installation"},{"location":"api/","text":"API Documentation @pydoc slam.application.Application Plugins @pydoc :set header_level = 3 @pydoc slam.application.ApplicationPlugin :with @pydoc slam.commands.check.api.CheckPlugin @pydoc slam.commands.release.api.ReleasePlugin @pydoc slam.commands.log.api.RemoteDetectorPlugin @pydoc slam.commands.log.api.RemoteProvider","title":"API Documentation"},{"location":"api/#api-documentation","text":"@pydoc slam.application.Application","title":"API Documentation"},{"location":"api/#plugins","text":"@pydoc :set header_level = 3 @pydoc slam.application.ApplicationPlugin :with @pydoc slam.commands.check.api.CheckPlugin @pydoc slam.commands.release.api.ReleasePlugin @pydoc slam.commands.log.api.RemoteDetectorPlugin @pydoc slam.commands.log.api.RemoteProvider","title":"Plugins"},{"location":"changelog/","text":"Changelog 1.0.7 (2022-02-23) Type Description PR Issues Author Fix `slam test` now only runs subproject tests instead of all tests in a monorepo if the main project (the one from the cwd) is not the same as the root project @NiklasRosenstein Fix `slam changelog update-pr` always counted 0 entries to update and thus never committed the changes @NiklasRosenstein 1.0.6 (2022-02-23) Type Description PR Issues Author Improvement `slam changelog update-pr` no longer overwrites existing PR references in entries unless the new `--overwrite` option is passed @NiklasRosenstein 1.0.5 (2022-02-23) Type Description PR Issues Author Feature add `ChangelogManager.readonly` which prevents you from saving a changelog to disk @NiklasRosenstein Feature add `[tool.shut.changelog].enabled` option which can be used to turn off the ability to add changelogs to the current project via the CLI @NiklasRosenstein 1.0.4 (2022-02-23) Type Description PR Issues Author Improvement hide output from `git checkout -b` in `github-actions` plugin @NiklasRosenstein Fix fix shortform detection for GitHub pull request URLs @NiklasRosenstein 1.0.3 (2022-02-23) Type Description PR Issues Author Improvement use more concrete branch name for checkout in `github-actions` plugin to work around issues if the branch name is the same as a top level folder in the repository @NiklasRosenstein Fix fix `github-actions` tendency to swallow command output which could have been of use in case of an error @NiklasRosenstein 1.0.2 (2022-02-23) Type Description PR Issues Author Improvement parse semver in `[tool.poetry.extras]` @NiklasRosenstein Feature add `--extras` and `--only-extras` options to `slam install` @NiklasRosenstein 1.0.1 (2022-02-23) Type Description PR Issues Author Fix fix the URL generated for pull request IDs when passed to the `slam changelog add` command for Github hosted repositories @NiklasRosenstein 1.0.0a6 (2022-02-15) Type Description PR Issues Author Improvement `Command.help` now treats the first line differently to support docstrings where the first line is on the same line as the quotes @NiklasRosenstein Improvement `slam changelog update-pr` now supports updating the PR reference for changelogs of all projects @NiklasRosenstein 1.0.0a5 (2022-02-15) Type Description PR Issues Author Fix test runner without TTY now does the correct line prefixing @NiklasRosenstein 1.0.0a3 (2022-02-13) Type Description PR Issues Author Fix fix entrypoint for `slam` script @NiklasRosenstein 1.0.0a2 (2022-02-13) Type Description PR Issues Author Improvement reduce code duplicity in `shut.commands.link` and `shut.util.python_package` @NiklasRosenstein Fix fix `shut log command --author,-a` option being a flag @NiklasRosenstein Improvement allow `pyproject.toml` to not exist when using `shut release` command @NiklasRosenstein Improvement fix pattern replacing `{version}` string in release references @NiklasRosenstein Improvement Add `Application.load_subapp()` and `Application.subapps` @NiklasRosenstein Improvement `shut release` now has an `include` configuration key that can be used to include the version refs of sub projects, for example in a mono repository where a root `shut.toml` is used to manage the same version number across all components @NiklasRosenstein Improvement add support for `SLAM_DIR` environment variable @NiklasRosenstein 1.0.0a1 (2022-02-13) Type Description PR Issues Author Breaking change Fully reimplment Shut, rename it to Slam @NiklasRosenstein 0.21.1 (2021-11-21) Type Description PR Issues Author Fix using `VirtualFiles.get_modified_files()` no longer creates non-existent directories @NiklasRosenstein Fix catch malformed ref error when trying to determine main branch name and use `develop` as default (see #40) @NiklasRosenstein Fix `$package.render-requirements-txt` is now handled correctly @NiklasRosenstein 0.21.0 (2021-09-18) Type Description PR Issues Author Feature add `$.scripts` in `package.yml` and `shut pkg run` command @NiklasRosenstein 0.20.0 (2021-09-16) Type Description PR Issues Author Feature add `shut init` command group with initial `shut init mkdocs` command @NiklasRosenstein Feature add `documentation` job in GitHub Actions template @NiklasRosenstein Feature ignore GitHub Actions template when checking package config in GitHub Actions (this is mainly used when using an unreleased version of shut to generate the action template or when needing to do quick modifications to the action config without triggering the shut checks in CI). @NiklasRosenstein 0.19.0 (2021-09-15) Type Description PR Issues Author Improvement Changelog entry `fixes` is now optional @NiklasRosenstein Improvement switch to Mako as a template engine from Jinja2 @NiklasRosenstein Feature add `$.templates` to `AbstractProjectModel` and the `github-actions` template @NiklasRosenstein Improvement `shut pkg new` now adds the `github-template` to the generated `package.yml` @NiklasRosenstein Improvement remove template rendering capability of `pylint` test driver, instead add `pylintrc` template plugin @NiklasRosenstein 0.18.2 (2021-09-04) Type Description PR Issues Author Fix min `click` version must be `7.1` for `no_args_is_help` option, also allow `8.x` @NiklasRosenstein 0.18.1 (2021-08-27) Type Description PR Issues Author Fix fix added in `0.18.0` for #33 is actually incorrect, the `command` variable was needed when using the `_tempcopy()` feature. now it is fixed for good NiklasRosenstein/shut#33 @NiklasRosenstein 0.18.0 (2021-08-26) Type Description PR Issues Author Feature add `pylint` test driver @NiklasRosenstein Fix the fix from `0.17.4` actually made the install cache not work at all and just always install test requirements, now shut knows per driver selection whether dependencies have been installed before or not @NiklasRosenstein Feature test drivers are now loaded via the `shut.test_drivers` entrypoint, allowing plugins to be registered from external packages @NiklasRosenstein Feature internal: add `AbstractProjectModel.get_auxiliary_renderers()` @NiklasRosenstein Feature `pylint` now comes with `.pylintrc` templates (only `shut` for now) and can also render templates from HTTP(S) URLs @NiklasRosenstein Feature Shut now recognizes lowercase readme/license files NiklasRosenstein/shut#31 @NiklasRosenstein Fix render `command` variable into `setup.py` only if package `$.install.hooks` is used NiklasRosenstein/shut#33 @NiklasRosenstein 0.17.4 (2021-08-20) Type Description PR Issues Author Fix fix missing test-requirements installation with `shut mono|pkg test --isolate` if the comand was run previously @NiklasRosenstein 0.17.3 (2021-08-20) Type Description PR Issues Author Fix `shut mono|pkg test --isolate` no longer installs the main package in develop mode @NiklasRosenstein 0.17.2 (2021-08-14) Type Description PR Issues Author Fix `shut mono|pkg update --verify-tag \"\"` does not show an error when it should @NiklasRosenstein Feature `shut mono|pkg update --verify-tag` now accepts strings prefixed with `refs/tags/` and strips that prefix (useful for GitHub Actions to use the `$GITHUB_REF` variable) @NiklasRosenstein Fix `shut pkg update --dry` option not respected @NiklasRosenstein 0.17.1 (2021-08-13) Type Description PR Issues Author Improvement dd `shut mono|pkg test -q,--quiet` option to quietly install test requirements with Pip, changed default to not do silent installs @NiklasRosenstein 0.17.0 (2021-08-13) Type Description PR Issues Author Feature add `shut pkg test --install/--no-install` which will default to `--install` if the current Python installation (determined by the `PYTHON` variable or falling back to just the `python` command) is a virtual env @NiklasRosenstein Feature add support for a `mypy` test driver @NiklasRosenstein Feature api: add `Package.get_source_directory()` @NiklasRosenstein Feature add `$.test-drivers` field in package model and deprecate `$.test-driver` for it. @NiklasRosenstein Feature add `shut mono test --install/--no-install` option (parallel to the existing option for `shut pkg test`), without the flag test requirements are only installed if Shut did not install the same requirements into the same environment before @NiklasRosenstein Feature make sure `$.test-requirements` are installed when running `shut mono|pkg test` in addition to the test-driver requirements. Update some output formatting of `shut mono|pkg test` @NiklasRosenstein Fix lines in `MANIFEST.in` outside the shut-specific block are not kept on `shut pkg update` (fixed in `VirtualFiles.write_all()`) @NiklasRosenstein Fix package `$.author` data can now be de-serialized from a mapping again (as used to be possible before migrating to `databind.core^1.x` @NiklasRosenstein Fix fix printing of `Failed test details:` when there were no failures but at least one skipped test case @NiklasRosenstein Feature `pytest` driver now supports a `$.parallelism` option which automatically pulls in `pytest-xdist` as a test requirement @NiklasRosenstein Feature `shut mono|pkg bump --tag|--push|--dry` options now have short versions `-t|-p|-d` respectively @NiklasRosenstein 0.16.1 (2021-08-12) Type Description PR Issues Author Fix pass `filename` to databind deserializer when loading monorepo/package configuration files @NiklasRosenstein Fix Cannot run \"pip install\" without develop mode on package that inherits monorepo license NiklasRosenstein/shut#22 @NiklasRosenstein 0.16.0 (2021-08-10) Type Description PR Issues Author Fix fix missing import for `typing.Dict` in `pytest` driver module, which could in some Python versions result in a `NameError` @NiklasRosenstein Improvement add `extra_requires[test]` in generated `setup.py` @NiklasRosenstein Fix fix `setup.py` rendering for inherit license files NiklasRosenstein/shut#21 @NiklasRosenstein Improvement `_tempcopy()` function in `setup.py` now fails if the file cannot be copied from the source file @NiklasRosenstein 0.15.1 (2021-08-09) Type Description PR Issues Author Feature add BSD2, BSD3, BSD4 and Apache2 license templates @ndjeong 0.15.0 (2021-08-09) Type Description PR Issues Author Feature add `shut mono|pkg status --json --include-config` options @NiklasRosenstein 0.14.3 (2021-08-08) Type Description PR Issues Author Fix fix `VendoredRequirement._normpath()` which corrupted absolute paths on Windows (e.g. `C:/path/to` would be converted to `./C:\\path\\to` when it should just be `C:\\path\\to`). This caused `shut pkg install` on Windows to fail. @NiklasRosenstein Fix `No module named setuptools` error when using `shut pkg install` in venv on Windows NiklasRosenstein/shut#16 @NiklasRosenstein Fix fix additional CR in generated `LICENSE.txt` on Windows when installing Shut from source NiklasRosenstein/shut#17 @NiklasRosenstein Fix `py.typed` file is rendered into `MANIFEST.in` with backslashes @NiklasRosenstein 0.14.2 (2021-08-03) Type Description PR Issues Author Improvement update how install hooks are rendered into `setup.py` @NiklasRosenstein 0.14.1 (2021-07-23) Type Description PR Issues Author Fix `TypeError` when using --extra and --dev/--test @NiklasRosenstein 0.14.0 (2021-07-22) Type Description PR Issues Author Feature add `--dev/--no-dev` and `--test/--no-test` options to `shut mono install` and `shut pkg install` @NiklasRosenstein 0.13.3 (2021-06-20) Type Description PR Issues Author Fix exclude python requirements when rendering `requirements.txt` @NiklasRosenstein 0.13.2 (2021-06-20) Type Description PR Issues Author Fix fix format of requirements in requirements.txt @NiklasRosenstein 0.13.1 (2021-06-20) Type Description PR Issues Author Fix also install `PackageModel.test_requirements` on `shut pkg install` @NiklasRosenstein 0.13.0 (2021-06-20) Type Description PR Issues Author Feature add `PackageModel.dev_requirements` which will be installed with `shut pkg install` @NiklasRosenstein Feature add `PackageModel.render_requirements_txt` which will be rendered with `shut pkg update` @NiklasRosenstein 0.12.0 (2021-06-08) Type Description PR Issues Author Improvement allow running Shut via `python -m shut` @NiklasRosenstein Fix fix call to `run_install()` in `shut mono install` @NiklasRosenstein 0.11.4 (2021-02-01) Type Description PR Issues Author Fix `shut pkg install` now correctly installs transitive package interdependencies in the right order @NiklasRosenstein 0.11.3 (2021-01-29) Type Description PR Issues Author Fix fix error rendering `setup.py` if the license file did not exist @NiklasRosenstein Feature add `get-version` command to `shut mono` and `shut pkg` @NiklasRosenstein Fix `shut pkg requirements add` now adds the InstallConfiguration pip args @NiklasRosenstein 0.11.2 (2020-12-19) Type Description PR Issues Author Fix fix license_file relative path generation in setuptools renderer, now correctly inherits the license file from the monorepo @NiklasRosenstein 0.11.1 (2020-12-04) Type Description PR Issues Author Fix fix error in `setuptools` renderer if no license is configured in the package @NiklasRosenstein 0.11.0 (2020-12-03) Type Description PR Issues Author Feature add `$.package-data` field to `package.yml` @NiklasRosenstein Fix add missing package data that needs to be packaged with `shut` @NiklasRosenstein 0.10.3 (2020-11-27) Type Description PR Issues Author Fix referencing a LICENSE or README outside the package directory now does not fail on install if the source file does not exist, but it will print a warning @NiklasRosenstein 0.10.2 (2020-11-27) Type Description PR Issues Author Fix add `PackageModel.license_file` and fix license rendering into MANIFEST.in and setup.py @NiklasRosenstein 0.10.1 (2020-11-27) Type Description PR Issues Author Fix remove debug print in \"package-url\" check @NiklasRosenstein 0.10.0 (2020-11-27) Type Description PR Issues Author Feature packages now inherit the monorepos license if it is unset (using PackageModel.get_license()) @NiklasRosenstein Feature If a package inherits the monoreop license, the LICENSE file will not be replicated in the package directory but instead be copied from the monorepo (using `_tempcopy()` in `setup.py`) @NiklasRosenstein Feature `shut {mono,pkg} update` commands now produce a LICENSE.txt file if a license template exists for the specified license (currently only `MIT`) @NiklasRosenstein Feature packages now inherit the monorepo `author` and `url`, and `version` if `release.single_version == True` @NiklasRosenstein Feature add \"shut pkg format\" command @NiklasRosenstein Feature package `author` and `url` are now inherited from the monorepo @NiklasRosenstein 0.9.0 (2020-11-20) Type Description PR Issues Author Fix cli: Fix `shut mono bump` not updating requirements in package `setup.py` if packages have inter dependencies NiklasRosenstein/shut#7 @NiklasRosenstein Feature shut.model.package: Add `$.install.index-url` and `$.install.extra-index-urls` fields @NiklasRosenstein Feature cli: `shut pkg install` now supports `$.install.index-url` and `$.install.extra-index-urls`, added a `--pipx` option @NiklasRosenstein Feature checks: Add check for namespace files @NiklasRosenstein Fix fix order of dependencies in the same mono repository when using `shut pkg install` @NiklasRosenstein 0.8.0 (2020-09-09) Type Description PR Issues Author Feature cli: Add `shut ... test --keep-test-env` option @NiklasRosenstein Feature shut.test.base: Add `TestStatus.SKIPPED` enumeration value @NiklasRosenstein Fix shut.test.pytest: Support skipped tests instead of failing ungracefully @NiklasRosenstein Feature cli: Support skipped tests `shut ... test` output @NiklasRosenstein 0.7.3 (2020-09-09) Type Description PR Issues Author Fix cli: Fix `AttributeError` when running `shut mono bump --snapshot` @NiklasRosenstein 0.7.2 (2020-09-08) Type Description PR Issues Author Fix cli: Fix `shut pkg install` command @NiklasRosenstein 0.7.1 (2020-09-08) Type Description PR Issues Author Feature shore.models.monorepo: Add `Monorepo.get_inter_dependencies_graph()` @NiklasRosenstein Fix cli: `shut mono install` now uses topological order to retrieve package requirements @NiklasRosenstein 0.7.0 (2020-09-08) Type Description PR Issues Author Improvement cli: Removed `-a,--all` flag from `shut mono update`, the command now always behaves like that flag is set @NiklasRosenstein Feature cli: Add `shut mono update` flags `--verify` and `--verify-tag` @NiklasRosenstein Fix shut.renderers.setuptools: Fix rendering of `extras_require` @NiklasRosenstein Feature cli: Add `shut mono install` command @NiklasRosenstein 0.6.0 (2020-09-08) Type Description PR Issues Author Feature shut.changelog: Add `breaking_change` Changelog type @NiklasRosenstein Feature cli: `shut ... bump` command without version argument or bump mode option will determine the bump mode from the unreleased changelog @NiklasRosenstein Improvement shore.model: `dump()` method now uses `nr.fs.atomic_file` to ensure the original file contents are not modified if the dump operation fails @NiklasRosenstein Improvement shore.model.requirements: Add `BaseRequirement` and `VendoredRequirement` classes, require databind.core and databind.json ^0.4.0 for the `@datamodel(serialize_as)` feature @NiklasRosenstein Feature shut.model.package: `Package.requirements` and related properties are now of type `BaseRequirement`, allowing the use of `VendoredRequirement`s @NiklasRosenstein Improvement cli: `shut pkg build` and `shut pkg publish` will now error if the package uses vendored requirements @NiklasRosenstein Feature cli: `shut pkg requirements add` now supports adding vendored requirements using the `-v,--vendor` option @NiklasRosenstein Improvement shut.model.package: Use new `RequirementsList` class instead of `List[BaseRequirement]` @NiklasRosenstein Feature shut.model.requirements: `Requirement` now supports package extras @NiklasRosenstein Feature cli: Add `--verify` option to `shut pkg update` @NiklasRosenstein Feature shut.checkers.package: Add `up to date` check for packages @NiklasRosenstein Feature cli: `shut pkg install` now supports installing vendored requirements @NiklasRosenstein Fix shut.renderers.setuptools: Fix error when package author was not set @NiklasRosenstein Improvement shut.checkers: Change Checkers interface (remove `project` argument) @NiklasRosenstein Feature cli: `shut pkg bump` now prevents bumping if managed files are outdated @NiklasRosenstein Fix cli: `shut pkg bump` now prevents bumping if package version is managed by a monorepo single-version (as was previously already expected to happen) @NiklasRosenstein Improvement cli: `shut mono bump` now includes the packages in the mono repo if `$.release.single-version` is enabled @NiklasRosenstein Improvement shut.checkers.monorepo: remove `bad-package-directory` check again, having a package name differ from the directory name is a valid use case @NiklasRosenstein Feature cli: Add `shut mono publish` command which delegates to `shut pkg publish`. @NiklasRosenstein Improvement shut.publishers.warehouse: The `WarehouseProvider` now uses the new `PackageModel.get_publish_conf()` instead of `PackageModel.publish` directly, allowing packages to inherit the publish configuration of the mono repository @NiklasRosenstein 0.5.5 (2020-09-05) Type Description PR Issues Author Improvement shut.test.pytest: set altname for `PytestDriver.report_file` to `report-file` @NiklasRosenstein Improvement cli: `shut mono test` now prints a summary of the status for every tested package @NiklasRosenstein 0.5.4 (2020-09-05) Type Description PR Issues Author Improvement shut.test.pytest: `PytestDriver.args` option now defaults to `[\"-vv\"]` @NiklasRosenstein Feature cli: Add `shut mono test --only` option @NiklasRosenstein 0.5.3 (2020-09-05) Type Description PR Issues Author Feature cli: Support `VIRTUALENV` and `PIP` environment variables in `shut pkg test` and `shut mono test` @NiklasRosenstein 0.5.2 (2020-09-05) Type Description PR Issues Author Feature cli: add `--checks/--no-checks` toggle to `shut pkg` and `shut mono` commands @NiklasRosenstein Fix shut.test.pytest: Fix parsing of Pytest JSON record for test functions from a `unittest.TestCase` subclass @NiklasRosenstein 0.5.1 (2020-09-05) Type Description PR Issues Author Fix cli: fix running \"shut pkg install\" from inside \"shut pkg test --isolate\" call @NiklasRosenstein 0.5.0 (2020-09-05) Type Description PR Issues Author Improvement shut.model.package: Remove `PackageData` class, merge it's members into `PackageModel` (this does not change the interface of `PackageModel`), Removed `PackageModel.data` property @NiklasRosenstein Tests fix unit tests @NiklasRosenstein Improvement shore.checkers.package: `package-author` check is now an error level check @NiklasRosenstein Improvement cli: `shut mono bump` and `shut pkg bump` no longer run checks, the command group already does it @NiklasRosenstein Fix shut.renderers.setuptools: fix rendering of `python_requires` option in `setup.py` if package is universal (i.e. the `python` requirement uses an OR (|) which we cannot currently translate to setuptools correctly) @NiklasRosenstein Feature cli: add `shut pkg test` command which and `PackageModel.test_driver` configuration, the `shore.test` sub-package implements test drivers (currently just `pytest`) @NiklasRosenstein Feature cli: add `shut mono test` command @NiklasRosenstein 0.4.0 (2020-09-04) Type Description PR Issues Author Improvement cli: Updated temrinal output of `shut ... checks` @NiklasRosenstein Improvement shut.model.package: Add `PackageError` exception class @NiklasRosenstein Improvement shut.checkers.monorepo: Add `bad-package-directory` check to Monorepo checker @NiklasRosenstein Improvement cli: `shut pkg checks` now inherits checks from the Monorepo if the check result targets the package directly (e.g. the `bad-package-directory` check) @NiklasRosenstein Improvement shut.checkers.core: Add `CheckResult.subject` member (default: `None`) @NiklasRosenstein Improvement cli: `shut pkg` and `shut mono` commands will now print failed checks to stderr before executing the requested subcommand. @NiklasRosenstein Improvement shut.checkers.monorepo: include error message in `invalid-package` check result @NiklasRosenstein Improvement shut.checkers.generic: `unknown-config-options` check no longer shows if it passes @NiklasRosenstein Improvement shut.checkers.generic: rename `unknown-config` check to `unknown-config-options` @NiklasRosenstein Improvement cli: no longer set `PYTHONWARNINGS` environment variable @NiklasRosenstein Improvement shut.model.monorepo: add `Monorepo.get_inter_dependencies_for()` method @NiklasRosenstein Feature cli: add `shut pkg install` command @NiklasRosenstein 0.3.0 (2020-08-29) Type Description PR Issues Author Improvement update Changelog typing for databind @NiklasRosenstein Improvement update paths printed in `shut ... bump` when changelog is released @NiklasRosenstein 0.2.0 (2020-08-29) Type Description PR Issues Author Docs fix README example @NiklasRosenstein","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#107-2022-02-23","text":"Type Description PR Issues Author Fix `slam test` now only runs subproject tests instead of all tests in a monorepo if the main project (the one from the cwd) is not the same as the root project @NiklasRosenstein Fix `slam changelog update-pr` always counted 0 entries to update and thus never committed the changes @NiklasRosenstein","title":"1.0.7 (2022-02-23)"},{"location":"changelog/#106-2022-02-23","text":"Type Description PR Issues Author Improvement `slam changelog update-pr` no longer overwrites existing PR references in entries unless the new `--overwrite` option is passed @NiklasRosenstein","title":"1.0.6 (2022-02-23)"},{"location":"changelog/#105-2022-02-23","text":"Type Description PR Issues Author Feature add `ChangelogManager.readonly` which prevents you from saving a changelog to disk @NiklasRosenstein Feature add `[tool.shut.changelog].enabled` option which can be used to turn off the ability to add changelogs to the current project via the CLI @NiklasRosenstein","title":"1.0.5 (2022-02-23)"},{"location":"changelog/#104-2022-02-23","text":"Type Description PR Issues Author Improvement hide output from `git checkout -b` in `github-actions` plugin @NiklasRosenstein Fix fix shortform detection for GitHub pull request URLs @NiklasRosenstein","title":"1.0.4 (2022-02-23)"},{"location":"changelog/#103-2022-02-23","text":"Type Description PR Issues Author Improvement use more concrete branch name for checkout in `github-actions` plugin to work around issues if the branch name is the same as a top level folder in the repository @NiklasRosenstein Fix fix `github-actions` tendency to swallow command output which could have been of use in case of an error @NiklasRosenstein","title":"1.0.3 (2022-02-23)"},{"location":"changelog/#102-2022-02-23","text":"Type Description PR Issues Author Improvement parse semver in `[tool.poetry.extras]` @NiklasRosenstein Feature add `--extras` and `--only-extras` options to `slam install` @NiklasRosenstein","title":"1.0.2 (2022-02-23)"},{"location":"changelog/#101-2022-02-23","text":"Type Description PR Issues Author Fix fix the URL generated for pull request IDs when passed to the `slam changelog add` command for Github hosted repositories @NiklasRosenstein","title":"1.0.1 (2022-02-23)"},{"location":"changelog/#100a6-2022-02-15","text":"Type Description PR Issues Author Improvement `Command.help` now treats the first line differently to support docstrings where the first line is on the same line as the quotes @NiklasRosenstein Improvement `slam changelog update-pr` now supports updating the PR reference for changelogs of all projects @NiklasRosenstein","title":"1.0.0a6 (2022-02-15)"},{"location":"changelog/#100a5-2022-02-15","text":"Type Description PR Issues Author Fix test runner without TTY now does the correct line prefixing @NiklasRosenstein","title":"1.0.0a5 (2022-02-15)"},{"location":"changelog/#100a3-2022-02-13","text":"Type Description PR Issues Author Fix fix entrypoint for `slam` script @NiklasRosenstein","title":"1.0.0a3 (2022-02-13)"},{"location":"changelog/#100a2-2022-02-13","text":"Type Description PR Issues Author Improvement reduce code duplicity in `shut.commands.link` and `shut.util.python_package` @NiklasRosenstein Fix fix `shut log command --author,-a` option being a flag @NiklasRosenstein Improvement allow `pyproject.toml` to not exist when using `shut release` command @NiklasRosenstein Improvement fix pattern replacing `{version}` string in release references @NiklasRosenstein Improvement Add `Application.load_subapp()` and `Application.subapps` @NiklasRosenstein Improvement `shut release` now has an `include` configuration key that can be used to include the version refs of sub projects, for example in a mono repository where a root `shut.toml` is used to manage the same version number across all components @NiklasRosenstein Improvement add support for `SLAM_DIR` environment variable @NiklasRosenstein","title":"1.0.0a2 (2022-02-13)"},{"location":"changelog/#100a1-2022-02-13","text":"Type Description PR Issues Author Breaking change Fully reimplment Shut, rename it to Slam @NiklasRosenstein","title":"1.0.0a1 (2022-02-13)"},{"location":"changelog/#0211-2021-11-21","text":"Type Description PR Issues Author Fix using `VirtualFiles.get_modified_files()` no longer creates non-existent directories @NiklasRosenstein Fix catch malformed ref error when trying to determine main branch name and use `develop` as default (see #40) @NiklasRosenstein Fix `$package.render-requirements-txt` is now handled correctly @NiklasRosenstein","title":"0.21.1 (2021-11-21)"},{"location":"changelog/#0210-2021-09-18","text":"Type Description PR Issues Author Feature add `$.scripts` in `package.yml` and `shut pkg run` command @NiklasRosenstein","title":"0.21.0 (2021-09-18)"},{"location":"changelog/#0200-2021-09-16","text":"Type Description PR Issues Author Feature add `shut init` command group with initial `shut init mkdocs` command @NiklasRosenstein Feature add `documentation` job in GitHub Actions template @NiklasRosenstein Feature ignore GitHub Actions template when checking package config in GitHub Actions (this is mainly used when using an unreleased version of shut to generate the action template or when needing to do quick modifications to the action config without triggering the shut checks in CI). @NiklasRosenstein","title":"0.20.0 (2021-09-16)"},{"location":"changelog/#0190-2021-09-15","text":"Type Description PR Issues Author Improvement Changelog entry `fixes` is now optional @NiklasRosenstein Improvement switch to Mako as a template engine from Jinja2 @NiklasRosenstein Feature add `$.templates` to `AbstractProjectModel` and the `github-actions` template @NiklasRosenstein Improvement `shut pkg new` now adds the `github-template` to the generated `package.yml` @NiklasRosenstein Improvement remove template rendering capability of `pylint` test driver, instead add `pylintrc` template plugin @NiklasRosenstein","title":"0.19.0 (2021-09-15)"},{"location":"changelog/#0182-2021-09-04","text":"Type Description PR Issues Author Fix min `click` version must be `7.1` for `no_args_is_help` option, also allow `8.x` @NiklasRosenstein","title":"0.18.2 (2021-09-04)"},{"location":"changelog/#0181-2021-08-27","text":"Type Description PR Issues Author Fix fix added in `0.18.0` for #33 is actually incorrect, the `command` variable was needed when using the `_tempcopy()` feature. now it is fixed for good NiklasRosenstein/shut#33 @NiklasRosenstein","title":"0.18.1 (2021-08-27)"},{"location":"changelog/#0180-2021-08-26","text":"Type Description PR Issues Author Feature add `pylint` test driver @NiklasRosenstein Fix the fix from `0.17.4` actually made the install cache not work at all and just always install test requirements, now shut knows per driver selection whether dependencies have been installed before or not @NiklasRosenstein Feature test drivers are now loaded via the `shut.test_drivers` entrypoint, allowing plugins to be registered from external packages @NiklasRosenstein Feature internal: add `AbstractProjectModel.get_auxiliary_renderers()` @NiklasRosenstein Feature `pylint` now comes with `.pylintrc` templates (only `shut` for now) and can also render templates from HTTP(S) URLs @NiklasRosenstein Feature Shut now recognizes lowercase readme/license files NiklasRosenstein/shut#31 @NiklasRosenstein Fix render `command` variable into `setup.py` only if package `$.install.hooks` is used NiklasRosenstein/shut#33 @NiklasRosenstein","title":"0.18.0 (2021-08-26)"},{"location":"changelog/#0174-2021-08-20","text":"Type Description PR Issues Author Fix fix missing test-requirements installation with `shut mono|pkg test --isolate` if the comand was run previously @NiklasRosenstein","title":"0.17.4 (2021-08-20)"},{"location":"changelog/#0173-2021-08-20","text":"Type Description PR Issues Author Fix `shut mono|pkg test --isolate` no longer installs the main package in develop mode @NiklasRosenstein","title":"0.17.3 (2021-08-20)"},{"location":"changelog/#0172-2021-08-14","text":"Type Description PR Issues Author Fix `shut mono|pkg update --verify-tag \"\"` does not show an error when it should @NiklasRosenstein Feature `shut mono|pkg update --verify-tag` now accepts strings prefixed with `refs/tags/` and strips that prefix (useful for GitHub Actions to use the `$GITHUB_REF` variable) @NiklasRosenstein Fix `shut pkg update --dry` option not respected @NiklasRosenstein","title":"0.17.2 (2021-08-14)"},{"location":"changelog/#0171-2021-08-13","text":"Type Description PR Issues Author Improvement dd `shut mono|pkg test -q,--quiet` option to quietly install test requirements with Pip, changed default to not do silent installs @NiklasRosenstein","title":"0.17.1 (2021-08-13)"},{"location":"changelog/#0170-2021-08-13","text":"Type Description PR Issues Author Feature add `shut pkg test --install/--no-install` which will default to `--install` if the current Python installation (determined by the `PYTHON` variable or falling back to just the `python` command) is a virtual env @NiklasRosenstein Feature add support for a `mypy` test driver @NiklasRosenstein Feature api: add `Package.get_source_directory()` @NiklasRosenstein Feature add `$.test-drivers` field in package model and deprecate `$.test-driver` for it. @NiklasRosenstein Feature add `shut mono test --install/--no-install` option (parallel to the existing option for `shut pkg test`), without the flag test requirements are only installed if Shut did not install the same requirements into the same environment before @NiklasRosenstein Feature make sure `$.test-requirements` are installed when running `shut mono|pkg test` in addition to the test-driver requirements. Update some output formatting of `shut mono|pkg test` @NiklasRosenstein Fix lines in `MANIFEST.in` outside the shut-specific block are not kept on `shut pkg update` (fixed in `VirtualFiles.write_all()`) @NiklasRosenstein Fix package `$.author` data can now be de-serialized from a mapping again (as used to be possible before migrating to `databind.core^1.x` @NiklasRosenstein Fix fix printing of `Failed test details:` when there were no failures but at least one skipped test case @NiklasRosenstein Feature `pytest` driver now supports a `$.parallelism` option which automatically pulls in `pytest-xdist` as a test requirement @NiklasRosenstein Feature `shut mono|pkg bump --tag|--push|--dry` options now have short versions `-t|-p|-d` respectively @NiklasRosenstein","title":"0.17.0 (2021-08-13)"},{"location":"changelog/#0161-2021-08-12","text":"Type Description PR Issues Author Fix pass `filename` to databind deserializer when loading monorepo/package configuration files @NiklasRosenstein Fix Cannot run \"pip install\" without develop mode on package that inherits monorepo license NiklasRosenstein/shut#22 @NiklasRosenstein","title":"0.16.1 (2021-08-12)"},{"location":"changelog/#0160-2021-08-10","text":"Type Description PR Issues Author Fix fix missing import for `typing.Dict` in `pytest` driver module, which could in some Python versions result in a `NameError` @NiklasRosenstein Improvement add `extra_requires[test]` in generated `setup.py` @NiklasRosenstein Fix fix `setup.py` rendering for inherit license files NiklasRosenstein/shut#21 @NiklasRosenstein Improvement `_tempcopy()` function in `setup.py` now fails if the file cannot be copied from the source file @NiklasRosenstein","title":"0.16.0 (2021-08-10)"},{"location":"changelog/#0151-2021-08-09","text":"Type Description PR Issues Author Feature add BSD2, BSD3, BSD4 and Apache2 license templates @ndjeong","title":"0.15.1 (2021-08-09)"},{"location":"changelog/#0150-2021-08-09","text":"Type Description PR Issues Author Feature add `shut mono|pkg status --json --include-config` options @NiklasRosenstein","title":"0.15.0 (2021-08-09)"},{"location":"changelog/#0143-2021-08-08","text":"Type Description PR Issues Author Fix fix `VendoredRequirement._normpath()` which corrupted absolute paths on Windows (e.g. `C:/path/to` would be converted to `./C:\\path\\to` when it should just be `C:\\path\\to`). This caused `shut pkg install` on Windows to fail. @NiklasRosenstein Fix `No module named setuptools` error when using `shut pkg install` in venv on Windows NiklasRosenstein/shut#16 @NiklasRosenstein Fix fix additional CR in generated `LICENSE.txt` on Windows when installing Shut from source NiklasRosenstein/shut#17 @NiklasRosenstein Fix `py.typed` file is rendered into `MANIFEST.in` with backslashes @NiklasRosenstein","title":"0.14.3 (2021-08-08)"},{"location":"changelog/#0142-2021-08-03","text":"Type Description PR Issues Author Improvement update how install hooks are rendered into `setup.py` @NiklasRosenstein","title":"0.14.2 (2021-08-03)"},{"location":"changelog/#0141-2021-07-23","text":"Type Description PR Issues Author Fix `TypeError` when using --extra and --dev/--test @NiklasRosenstein","title":"0.14.1 (2021-07-23)"},{"location":"changelog/#0140-2021-07-22","text":"Type Description PR Issues Author Feature add `--dev/--no-dev` and `--test/--no-test` options to `shut mono install` and `shut pkg install` @NiklasRosenstein","title":"0.14.0 (2021-07-22)"},{"location":"changelog/#0133-2021-06-20","text":"Type Description PR Issues Author Fix exclude python requirements when rendering `requirements.txt` @NiklasRosenstein","title":"0.13.3 (2021-06-20)"},{"location":"changelog/#0132-2021-06-20","text":"Type Description PR Issues Author Fix fix format of requirements in requirements.txt @NiklasRosenstein","title":"0.13.2 (2021-06-20)"},{"location":"changelog/#0131-2021-06-20","text":"Type Description PR Issues Author Fix also install `PackageModel.test_requirements` on `shut pkg install` @NiklasRosenstein","title":"0.13.1 (2021-06-20)"},{"location":"changelog/#0130-2021-06-20","text":"Type Description PR Issues Author Feature add `PackageModel.dev_requirements` which will be installed with `shut pkg install` @NiklasRosenstein Feature add `PackageModel.render_requirements_txt` which will be rendered with `shut pkg update` @NiklasRosenstein","title":"0.13.0 (2021-06-20)"},{"location":"changelog/#0120-2021-06-08","text":"Type Description PR Issues Author Improvement allow running Shut via `python -m shut` @NiklasRosenstein Fix fix call to `run_install()` in `shut mono install` @NiklasRosenstein","title":"0.12.0 (2021-06-08)"},{"location":"changelog/#0114-2021-02-01","text":"Type Description PR Issues Author Fix `shut pkg install` now correctly installs transitive package interdependencies in the right order @NiklasRosenstein","title":"0.11.4 (2021-02-01)"},{"location":"changelog/#0113-2021-01-29","text":"Type Description PR Issues Author Fix fix error rendering `setup.py` if the license file did not exist @NiklasRosenstein Feature add `get-version` command to `shut mono` and `shut pkg` @NiklasRosenstein Fix `shut pkg requirements add` now adds the InstallConfiguration pip args @NiklasRosenstein","title":"0.11.3 (2021-01-29)"},{"location":"changelog/#0112-2020-12-19","text":"Type Description PR Issues Author Fix fix license_file relative path generation in setuptools renderer, now correctly inherits the license file from the monorepo @NiklasRosenstein","title":"0.11.2 (2020-12-19)"},{"location":"changelog/#0111-2020-12-04","text":"Type Description PR Issues Author Fix fix error in `setuptools` renderer if no license is configured in the package @NiklasRosenstein","title":"0.11.1 (2020-12-04)"},{"location":"changelog/#0110-2020-12-03","text":"Type Description PR Issues Author Feature add `$.package-data` field to `package.yml` @NiklasRosenstein Fix add missing package data that needs to be packaged with `shut` @NiklasRosenstein","title":"0.11.0 (2020-12-03)"},{"location":"changelog/#0103-2020-11-27","text":"Type Description PR Issues Author Fix referencing a LICENSE or README outside the package directory now does not fail on install if the source file does not exist, but it will print a warning @NiklasRosenstein","title":"0.10.3 (2020-11-27)"},{"location":"changelog/#0102-2020-11-27","text":"Type Description PR Issues Author Fix add `PackageModel.license_file` and fix license rendering into MANIFEST.in and setup.py @NiklasRosenstein","title":"0.10.2 (2020-11-27)"},{"location":"changelog/#0101-2020-11-27","text":"Type Description PR Issues Author Fix remove debug print in \"package-url\" check @NiklasRosenstein","title":"0.10.1 (2020-11-27)"},{"location":"changelog/#0100-2020-11-27","text":"Type Description PR Issues Author Feature packages now inherit the monorepos license if it is unset (using PackageModel.get_license()) @NiklasRosenstein Feature If a package inherits the monoreop license, the LICENSE file will not be replicated in the package directory but instead be copied from the monorepo (using `_tempcopy()` in `setup.py`) @NiklasRosenstein Feature `shut {mono,pkg} update` commands now produce a LICENSE.txt file if a license template exists for the specified license (currently only `MIT`) @NiklasRosenstein Feature packages now inherit the monorepo `author` and `url`, and `version` if `release.single_version == True` @NiklasRosenstein Feature add \"shut pkg format\" command @NiklasRosenstein Feature package `author` and `url` are now inherited from the monorepo @NiklasRosenstein","title":"0.10.0 (2020-11-27)"},{"location":"changelog/#090-2020-11-20","text":"Type Description PR Issues Author Fix cli: Fix `shut mono bump` not updating requirements in package `setup.py` if packages have inter dependencies NiklasRosenstein/shut#7 @NiklasRosenstein Feature shut.model.package: Add `$.install.index-url` and `$.install.extra-index-urls` fields @NiklasRosenstein Feature cli: `shut pkg install` now supports `$.install.index-url` and `$.install.extra-index-urls`, added a `--pipx` option @NiklasRosenstein Feature checks: Add check for namespace files @NiklasRosenstein Fix fix order of dependencies in the same mono repository when using `shut pkg install` @NiklasRosenstein","title":"0.9.0 (2020-11-20)"},{"location":"changelog/#080-2020-09-09","text":"Type Description PR Issues Author Feature cli: Add `shut ... test --keep-test-env` option @NiklasRosenstein Feature shut.test.base: Add `TestStatus.SKIPPED` enumeration value @NiklasRosenstein Fix shut.test.pytest: Support skipped tests instead of failing ungracefully @NiklasRosenstein Feature cli: Support skipped tests `shut ... test` output @NiklasRosenstein","title":"0.8.0 (2020-09-09)"},{"location":"changelog/#073-2020-09-09","text":"Type Description PR Issues Author Fix cli: Fix `AttributeError` when running `shut mono bump --snapshot` @NiklasRosenstein","title":"0.7.3 (2020-09-09)"},{"location":"changelog/#072-2020-09-08","text":"Type Description PR Issues Author Fix cli: Fix `shut pkg install` command @NiklasRosenstein","title":"0.7.2 (2020-09-08)"},{"location":"changelog/#071-2020-09-08","text":"Type Description PR Issues Author Feature shore.models.monorepo: Add `Monorepo.get_inter_dependencies_graph()` @NiklasRosenstein Fix cli: `shut mono install` now uses topological order to retrieve package requirements @NiklasRosenstein","title":"0.7.1 (2020-09-08)"},{"location":"changelog/#070-2020-09-08","text":"Type Description PR Issues Author Improvement cli: Removed `-a,--all` flag from `shut mono update`, the command now always behaves like that flag is set @NiklasRosenstein Feature cli: Add `shut mono update` flags `--verify` and `--verify-tag` @NiklasRosenstein Fix shut.renderers.setuptools: Fix rendering of `extras_require` @NiklasRosenstein Feature cli: Add `shut mono install` command @NiklasRosenstein","title":"0.7.0 (2020-09-08)"},{"location":"changelog/#060-2020-09-08","text":"Type Description PR Issues Author Feature shut.changelog: Add `breaking_change` Changelog type @NiklasRosenstein Feature cli: `shut ... bump` command without version argument or bump mode option will determine the bump mode from the unreleased changelog @NiklasRosenstein Improvement shore.model: `dump()` method now uses `nr.fs.atomic_file` to ensure the original file contents are not modified if the dump operation fails @NiklasRosenstein Improvement shore.model.requirements: Add `BaseRequirement` and `VendoredRequirement` classes, require databind.core and databind.json ^0.4.0 for the `@datamodel(serialize_as)` feature @NiklasRosenstein Feature shut.model.package: `Package.requirements` and related properties are now of type `BaseRequirement`, allowing the use of `VendoredRequirement`s @NiklasRosenstein Improvement cli: `shut pkg build` and `shut pkg publish` will now error if the package uses vendored requirements @NiklasRosenstein Feature cli: `shut pkg requirements add` now supports adding vendored requirements using the `-v,--vendor` option @NiklasRosenstein Improvement shut.model.package: Use new `RequirementsList` class instead of `List[BaseRequirement]` @NiklasRosenstein Feature shut.model.requirements: `Requirement` now supports package extras @NiklasRosenstein Feature cli: Add `--verify` option to `shut pkg update` @NiklasRosenstein Feature shut.checkers.package: Add `up to date` check for packages @NiklasRosenstein Feature cli: `shut pkg install` now supports installing vendored requirements @NiklasRosenstein Fix shut.renderers.setuptools: Fix error when package author was not set @NiklasRosenstein Improvement shut.checkers: Change Checkers interface (remove `project` argument) @NiklasRosenstein Feature cli: `shut pkg bump` now prevents bumping if managed files are outdated @NiklasRosenstein Fix cli: `shut pkg bump` now prevents bumping if package version is managed by a monorepo single-version (as was previously already expected to happen) @NiklasRosenstein Improvement cli: `shut mono bump` now includes the packages in the mono repo if `$.release.single-version` is enabled @NiklasRosenstein Improvement shut.checkers.monorepo: remove `bad-package-directory` check again, having a package name differ from the directory name is a valid use case @NiklasRosenstein Feature cli: Add `shut mono publish` command which delegates to `shut pkg publish`. @NiklasRosenstein Improvement shut.publishers.warehouse: The `WarehouseProvider` now uses the new `PackageModel.get_publish_conf()` instead of `PackageModel.publish` directly, allowing packages to inherit the publish configuration of the mono repository @NiklasRosenstein","title":"0.6.0 (2020-09-08)"},{"location":"changelog/#055-2020-09-05","text":"Type Description PR Issues Author Improvement shut.test.pytest: set altname for `PytestDriver.report_file` to `report-file` @NiklasRosenstein Improvement cli: `shut mono test` now prints a summary of the status for every tested package @NiklasRosenstein","title":"0.5.5 (2020-09-05)"},{"location":"changelog/#054-2020-09-05","text":"Type Description PR Issues Author Improvement shut.test.pytest: `PytestDriver.args` option now defaults to `[\"-vv\"]` @NiklasRosenstein Feature cli: Add `shut mono test --only` option @NiklasRosenstein","title":"0.5.4 (2020-09-05)"},{"location":"changelog/#053-2020-09-05","text":"Type Description PR Issues Author Feature cli: Support `VIRTUALENV` and `PIP` environment variables in `shut pkg test` and `shut mono test` @NiklasRosenstein","title":"0.5.3 (2020-09-05)"},{"location":"changelog/#052-2020-09-05","text":"Type Description PR Issues Author Feature cli: add `--checks/--no-checks` toggle to `shut pkg` and `shut mono` commands @NiklasRosenstein Fix shut.test.pytest: Fix parsing of Pytest JSON record for test functions from a `unittest.TestCase` subclass @NiklasRosenstein","title":"0.5.2 (2020-09-05)"},{"location":"changelog/#051-2020-09-05","text":"Type Description PR Issues Author Fix cli: fix running \"shut pkg install\" from inside \"shut pkg test --isolate\" call @NiklasRosenstein","title":"0.5.1 (2020-09-05)"},{"location":"changelog/#050-2020-09-05","text":"Type Description PR Issues Author Improvement shut.model.package: Remove `PackageData` class, merge it's members into `PackageModel` (this does not change the interface of `PackageModel`), Removed `PackageModel.data` property @NiklasRosenstein Tests fix unit tests @NiklasRosenstein Improvement shore.checkers.package: `package-author` check is now an error level check @NiklasRosenstein Improvement cli: `shut mono bump` and `shut pkg bump` no longer run checks, the command group already does it @NiklasRosenstein Fix shut.renderers.setuptools: fix rendering of `python_requires` option in `setup.py` if package is universal (i.e. the `python` requirement uses an OR (|) which we cannot currently translate to setuptools correctly) @NiklasRosenstein Feature cli: add `shut pkg test` command which and `PackageModel.test_driver` configuration, the `shore.test` sub-package implements test drivers (currently just `pytest`) @NiklasRosenstein Feature cli: add `shut mono test` command @NiklasRosenstein","title":"0.5.0 (2020-09-05)"},{"location":"changelog/#040-2020-09-04","text":"Type Description PR Issues Author Improvement cli: Updated temrinal output of `shut ... checks` @NiklasRosenstein Improvement shut.model.package: Add `PackageError` exception class @NiklasRosenstein Improvement shut.checkers.monorepo: Add `bad-package-directory` check to Monorepo checker @NiklasRosenstein Improvement cli: `shut pkg checks` now inherits checks from the Monorepo if the check result targets the package directly (e.g. the `bad-package-directory` check) @NiklasRosenstein Improvement shut.checkers.core: Add `CheckResult.subject` member (default: `None`) @NiklasRosenstein Improvement cli: `shut pkg` and `shut mono` commands will now print failed checks to stderr before executing the requested subcommand. @NiklasRosenstein Improvement shut.checkers.monorepo: include error message in `invalid-package` check result @NiklasRosenstein Improvement shut.checkers.generic: `unknown-config-options` check no longer shows if it passes @NiklasRosenstein Improvement shut.checkers.generic: rename `unknown-config` check to `unknown-config-options` @NiklasRosenstein Improvement cli: no longer set `PYTHONWARNINGS` environment variable @NiklasRosenstein Improvement shut.model.monorepo: add `Monorepo.get_inter_dependencies_for()` method @NiklasRosenstein Feature cli: add `shut pkg install` command @NiklasRosenstein","title":"0.4.0 (2020-09-04)"},{"location":"changelog/#030-2020-08-29","text":"Type Description PR Issues Author Improvement update Changelog typing for databind @NiklasRosenstein Improvement update paths printed in `shut ... bump` when changelog is released @NiklasRosenstein","title":"0.3.0 (2020-08-29)"},{"location":"changelog/#020-2020-08-29","text":"Type Description PR Issues Author Docs fix README example @NiklasRosenstein","title":"0.2.0 (2020-08-29)"},{"location":"configuration/","text":"Configuration The Slam configuration is read either from a slam.toml file or from the [tool.slam] section in pyproject.toml . When a configuration value is described in the documentation, it is referenced without the [tool.slam] prefix that is needed in the case where the configuration is loaded from pyproject.toml . Check out the documentation for each command separately to understand how they can be configured. Application configuration plugins.disable Type : list[str] | None Default : None A list of plugins to disable, subtracting from the list of plugins that are loaded by default. By default, all builtin plugins provided directly by Slam will be loaded. External plugins need to be enabled explicitly with plugins.enable . plugins.enable Type : list[str] | None Default : None A list of plugins to enable in addition to the list of plugins that are loaded by default (i.e. all the Slam builtin plugins). External plugins need to be enabled explicitly with this option. source-directory Type : str | None Default : None The directory in which the Python source code resides. If not set, Slam will attempt to look into ./src/ first and then ./ . This is used to detect the Python packages. Todo : If [tool.poetry.packages] is set, try and use that over manually detecting the packages. typed Type : bool Default : True Whether the project uses type hints.","title":"Configuration"},{"location":"configuration/#configuration","text":"The Slam configuration is read either from a slam.toml file or from the [tool.slam] section in pyproject.toml . When a configuration value is described in the documentation, it is referenced without the [tool.slam] prefix that is needed in the case where the configuration is loaded from pyproject.toml . Check out the documentation for each command separately to understand how they can be configured.","title":"Configuration"},{"location":"configuration/#application-configuration","text":"","title":"Application configuration"},{"location":"configuration/#pluginsdisable","text":"Type : list[str] | None Default : None A list of plugins to disable, subtracting from the list of plugins that are loaded by default. By default, all builtin plugins provided directly by Slam will be loaded. External plugins need to be enabled explicitly with plugins.enable .","title":"plugins.disable"},{"location":"configuration/#pluginsenable","text":"Type : list[str] | None Default : None A list of plugins to enable in addition to the list of plugins that are loaded by default (i.e. all the Slam builtin plugins). External plugins need to be enabled explicitly with this option.","title":"plugins.enable"},{"location":"configuration/#source-directory","text":"Type : str | None Default : None The directory in which the Python source code resides. If not set, Slam will attempt to look into ./src/ first and then ./ . This is used to detect the Python packages. Todo : If [tool.poetry.packages] is set, try and use that over manually detecting the packages.","title":"source-directory"},{"location":"configuration/#typed","text":"Type : bool Default : True Whether the project uses type hints.","title":"typed"},{"location":"plugins/","text":"Plugins A lot of Slam's internal functionality is provided through a plugin interface, allowing other tools to extend the functionality of Slam further. Types of plugins ApplicationPlugin \u2013 This is the main type of plugin. Most other types of plugins are registered through an application plugin using the Application.plugins registry. CheckPlugin \u2013 The type of plugin used by slam check . ReleasePlugin \u2013 The type of plugin used by slam release to detect version references. RemoteDetectorPlugin \u2013 A type of plugin that is intended to automatically detect the type of remote repository used in a project and return an appropriate ChangelogValidator for use by the slam log commands.","title":"Plugins"},{"location":"plugins/#plugins","text":"A lot of Slam's internal functionality is provided through a plugin interface, allowing other tools to extend the functionality of Slam further.","title":"Plugins"},{"location":"plugins/#types-of-plugins","text":"ApplicationPlugin \u2013 This is the main type of plugin. Most other types of plugins are registered through an application plugin using the Application.plugins registry. CheckPlugin \u2013 The type of plugin used by slam check . ReleasePlugin \u2013 The type of plugin used by slam release to detect version references. RemoteDetectorPlugin \u2013 A type of plugin that is intended to automatically detect the type of remote repository used in a project and return an appropriate ChangelogValidator for use by the slam log commands.","title":"Types of plugins"},{"location":"commands/changelog/","text":"slam changelog The slam log command can be used to manage changelog files which are usually stored in a .changelog/ directory, but the directory can be changed using the tool.slam.changelog-dir option. The CLI allows you to add new entries as well as print them in a pretty format in the terminal or render the changelog as Markdown. A changelog entry has a unique ID, one or more tags that categorize the type of change, one or more authors, a short description, maybe a link to a pull request and links to issues that are fixed by the change. $ slam log add - t fix , docs - m 'Fix the documentation' -- fixes 231 , 234 # Added changelog entry to .changelog/_unreleased.toml id = \"d0092ba\" tags = [ \"fix\" , \"docs\" ] message = \"Fix the documentation\" fixes = [ \"https://github.com/username/repo/issues/231\" , \"https://github.com/username/repo/issues/234\" , ] pr = null The pr value can be set manually once a PR was created, or be updated automatically for example through a GitHub action or other type of CI job (the slam log inject-pr-url command can help with that). Update the PR field in CI checks Example for GitHub Actions update-pr-numbers: if: github.event_name == 'pull_request' permissions: contents: write runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Set up Python ${{ matrix.python-version }} uses: actions/setup-python@v2 with: { python-version: \"3.10\" } - name: Install Slam run: pip install slam-cli==1.0.0 - name: Update PR references in changelogs run: slam -vv changelog update-pr --use github-actions Note that you still have to configure Git such that it has an author email and name to create the commit with. Configuration log.directory Type : str Default : .changelog/ The directory in which the changelogs are stored. log.valid-types Type : list[str] Default : [\"breaking change\", \"docs\", \"feature\", \"fix\", \"hygiene\", \"improvement\", \"tests\"] A list of strings that are accepted in changelog entries as types. log.remote Type : RemoteProvider | None Default : None If None , will be automatically detected using the RemoteDetectorPlugin plugins.","title":"slam changelog"},{"location":"commands/changelog/#slam-changelog","text":"The slam log command can be used to manage changelog files which are usually stored in a .changelog/ directory, but the directory can be changed using the tool.slam.changelog-dir option. The CLI allows you to add new entries as well as print them in a pretty format in the terminal or render the changelog as Markdown. A changelog entry has a unique ID, one or more tags that categorize the type of change, one or more authors, a short description, maybe a link to a pull request and links to issues that are fixed by the change. $ slam log add - t fix , docs - m 'Fix the documentation' -- fixes 231 , 234 # Added changelog entry to .changelog/_unreleased.toml id = \"d0092ba\" tags = [ \"fix\" , \"docs\" ] message = \"Fix the documentation\" fixes = [ \"https://github.com/username/repo/issues/231\" , \"https://github.com/username/repo/issues/234\" , ] pr = null The pr value can be set manually once a PR was created, or be updated automatically for example through a GitHub action or other type of CI job (the slam log inject-pr-url command can help with that).","title":"slam changelog"},{"location":"commands/changelog/#update-the-pr-field-in-ci-checks","text":"Example for GitHub Actions update-pr-numbers: if: github.event_name == 'pull_request' permissions: contents: write runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Set up Python ${{ matrix.python-version }} uses: actions/setup-python@v2 with: { python-version: \"3.10\" } - name: Install Slam run: pip install slam-cli==1.0.0 - name: Update PR references in changelogs run: slam -vv changelog update-pr --use github-actions Note that you still have to configure Git such that it has an author email and name to create the commit with.","title":"Update the PR field in CI checks"},{"location":"commands/changelog/#configuration","text":"","title":"Configuration"},{"location":"commands/changelog/#logdirectory","text":"Type : str Default : .changelog/ The directory in which the changelogs are stored.","title":"log.directory"},{"location":"commands/changelog/#logvalid-types","text":"Type : list[str] Default : [\"breaking change\", \"docs\", \"feature\", \"fix\", \"hygiene\", \"improvement\", \"tests\"] A list of strings that are accepted in changelog entries as types.","title":"log.valid-types"},{"location":"commands/changelog/#logremote","text":"Type : RemoteProvider | None Default : None If None , will be automatically detected using the RemoteDetectorPlugin plugins.","title":"log.remote"},{"location":"commands/check/","text":"slam check The slam check command performs sanity checks on your project. Configuration check.plugins Type : list[str] Default : [\"log\", \"poetry\", \"release\", \"slam\"] A list of check plugins to use. Note that the Poetry plugin will only fire checks if your project appears to be using Poetry, so there is no harm in leaving it enabled even if you don't use it. Additional plugins can be registered via an ApplicationPlugin under the CheckPlugin group. Todo : Error if a specified plugin does not exist. Built-in checks log The ChangelogConsistencyCheck checks if the changelogs managed by Slam are in order. Check log:validate Checks if all structured changelog files managed by Slam can be loaded and are valid. slam The ShutChecksPlugin provides all Python specific checks. Check slam:packages Checks if Slam can detect at least one package. Check slam:typed Checks if the project is typed but does not contain a py.typed file or the other way round. This currently relies on the $.typed configuration and does not inspect the code for type hints. poetry The PoetryChecksPlugin will perform some Poetry specific configuration checks. Check poetry:readme Checks if the project readme is configured correctly or if Poetry is able to automatically pick up the readme file if it is not configured. This inspects te [tool.poetry.readme] or [project.readme] settings in pyproject.toml and compares it with the readme file that was automatically identified by Slam (which is a file called README, case-insensitive with one of the suffixes in the order of .md , .rst , .txt , or if that does not match, any file beginning with README. ). Check poetry:urls Checks if the project URLs are configured properly. For the homepage URL, it will check for [tool.poetry.homepage] or the Homepage key in [tool.poetry.urls] . Not having the homepage configured will trigger a warning. If otherwise at least one of Documentation , Repository or Bug Tracker are missing, the check shows a recommendation. Check poetry:classifiers Checks if [tool.poetry] classifiers are all valid trove classifiers per https://pypi.org/classifiers/. Check poetry:license Checks if the [tool.poetry] license is set and whether it is a valid SPDX license identifier. TODO Check if the license is a valid SPDX license identifier. Todo : More of those checks should also support looking into [project] . release The ReleaseChecksPlugin performs checks to validate that slam release can be used properly. Check release:version Checks if the __version__ can be detected in the source code of all detected packages. Check release:remote TODO Checks if the VCS remote is configured or can be detected automatically such that the slam release --create-release option can be used.","title":"slam check"},{"location":"commands/check/#slam-check","text":"The slam check command performs sanity checks on your project.","title":"slam check"},{"location":"commands/check/#configuration","text":"","title":"Configuration"},{"location":"commands/check/#checkplugins","text":"Type : list[str] Default : [\"log\", \"poetry\", \"release\", \"slam\"] A list of check plugins to use. Note that the Poetry plugin will only fire checks if your project appears to be using Poetry, so there is no harm in leaving it enabled even if you don't use it. Additional plugins can be registered via an ApplicationPlugin under the CheckPlugin group. Todo : Error if a specified plugin does not exist.","title":"check.plugins"},{"location":"commands/check/#built-in-checks","text":"","title":"Built-in checks"},{"location":"commands/check/#log","text":"The ChangelogConsistencyCheck checks if the changelogs managed by Slam are in order.","title":"log"},{"location":"commands/check/#check-logvalidate","text":"Checks if all structured changelog files managed by Slam can be loaded and are valid.","title":"Check log:validate"},{"location":"commands/check/#slam","text":"The ShutChecksPlugin provides all Python specific checks.","title":"slam"},{"location":"commands/check/#check-slampackages","text":"Checks if Slam can detect at least one package.","title":"Check slam:packages"},{"location":"commands/check/#check-slamtyped","text":"Checks if the project is typed but does not contain a py.typed file or the other way round. This currently relies on the $.typed configuration and does not inspect the code for type hints.","title":"Check slam:typed"},{"location":"commands/check/#poetry","text":"The PoetryChecksPlugin will perform some Poetry specific configuration checks.","title":"poetry"},{"location":"commands/check/#check-poetryreadme","text":"Checks if the project readme is configured correctly or if Poetry is able to automatically pick up the readme file if it is not configured. This inspects te [tool.poetry.readme] or [project.readme] settings in pyproject.toml and compares it with the readme file that was automatically identified by Slam (which is a file called README, case-insensitive with one of the suffixes in the order of .md , .rst , .txt , or if that does not match, any file beginning with README. ).","title":"Check poetry:readme"},{"location":"commands/check/#check-poetryurls","text":"Checks if the project URLs are configured properly. For the homepage URL, it will check for [tool.poetry.homepage] or the Homepage key in [tool.poetry.urls] . Not having the homepage configured will trigger a warning. If otherwise at least one of Documentation , Repository or Bug Tracker are missing, the check shows a recommendation.","title":"Check poetry:urls"},{"location":"commands/check/#check-poetryclassifiers","text":"Checks if [tool.poetry] classifiers are all valid trove classifiers per https://pypi.org/classifiers/.","title":"Check poetry:classifiers"},{"location":"commands/check/#check-poetrylicense","text":"Checks if the [tool.poetry] license is set and whether it is a valid SPDX license identifier. TODO Check if the license is a valid SPDX license identifier. Todo : More of those checks should also support looking into [project] .","title":"Check poetry:license"},{"location":"commands/check/#release","text":"The ReleaseChecksPlugin performs checks to validate that slam release can be used properly.","title":"release"},{"location":"commands/check/#check-releaseversion","text":"Checks if the __version__ can be detected in the source code of all detected packages.","title":"Check release:version"},{"location":"commands/check/#check-releaseremote","text":"TODO Checks if the VCS remote is configured or can be detected automatically such that the slam release --create-release option can be used.","title":"Check release:remote"},{"location":"commands/link/","text":"slam link This is particularly interesting when managing the package with Poetry as it does not currently support editable installs (as of Poetry 1.2.0a2 on 2022-01-14). This is a little helper command that will temporarily reorganize the pyproject.toml to be compatible with Flit and make use if it's symlink installation feature ( flit install -s ). $ slam link Extras to install for deps 'all': {'.none'} Symlinking src/my_package -> /home/niklas/.local/venvs/craftr/lib/python3.10/site-packages/my_package","title":"slam link"},{"location":"commands/link/#slam-link","text":"This is particularly interesting when managing the package with Poetry as it does not currently support editable installs (as of Poetry 1.2.0a2 on 2022-01-14). This is a little helper command that will temporarily reorganize the pyproject.toml to be compatible with Flit and make use if it's symlink installation feature ( flit install -s ). $ slam link Extras to install for deps 'all': {'.none'} Symlinking src/my_package -> /home/niklas/.local/venvs/craftr/lib/python3.10/site-packages/my_package","title":"slam link"},{"location":"commands/release/","text":"slam release The slam release command updates references to the version number in pyproject.toml and your source code, updates the unreleased changelog if you make use of Slam's structured changelogs, as well as updating any other versions specified in the configuration or detected by other plugins. It covers the following use cases: Bump the version number (and various features around that event) Validate that the version number is consistent across the project Example $ slam release patch --tag --push bumping 2 version references: pyproject.toml: 0.1.0 \u2192 0.1.1 src/my_package/__init__.py: 0.1.0 \u2192 0.1.1 release staged changelog .changelog/_unreleased.toml \u2192 .changelog/0.1.0.toml tagging 0.1.1 [develop] ec1e9b3] release 0.1.0 3 files changed, 3 insertions(+), 4 deletions(-) rename .changelog/{_unreleased.yml => 0.1.0.yml} (78%) pushing develop, 0.1.1 to origin Enumerating objects: 24, done. Counting objects: 100% (24/24), done. Delta compression using up to 8 threads Compressing objects: 100% (17/17), done. Writing objects: 100% (24/24), 3.87 KiB | 566.00 KiB/s, done. Total 24 (delta 4), reused 0 (delta 0) To https://github.com/username/repo * [new branch] develop -> develop * [new tag] 0.1.1 -> 0.1.1 Configuration release.branch Type : str Default : \"develop\" The branch on which releases are created. Unless --no-branch-check is passed to slam release , the command will refuse to continue if the current branch name does not match this value. release.commit-message Type : str Default : \"release {version}\" The commit message to use when using the --tag, -t option. The string {version} will be replaced with the new version number. release.tag-name Type : str Default : \"{version}\" The tag name to use when using the --tag, -t option. The string {version} will be replaced with the new version number. release.references Type : list[VersionRefConfig] Default : [] A list of version references that should be considered in addition to the version references that are automatically detected by Slam when updating version numbers across the project with the slam release command. A VersionRefConfig contains the fields file: str and pattern: str . The file is considered relative to the project directory (which is the directory where the slam.toml or pyproject.toml configuration file resides).","title":"slam release"},{"location":"commands/release/#slam-release","text":"The slam release command updates references to the version number in pyproject.toml and your source code, updates the unreleased changelog if you make use of Slam's structured changelogs, as well as updating any other versions specified in the configuration or detected by other plugins. It covers the following use cases: Bump the version number (and various features around that event) Validate that the version number is consistent across the project Example $ slam release patch --tag --push bumping 2 version references: pyproject.toml: 0.1.0 \u2192 0.1.1 src/my_package/__init__.py: 0.1.0 \u2192 0.1.1 release staged changelog .changelog/_unreleased.toml \u2192 .changelog/0.1.0.toml tagging 0.1.1 [develop] ec1e9b3] release 0.1.0 3 files changed, 3 insertions(+), 4 deletions(-) rename .changelog/{_unreleased.yml => 0.1.0.yml} (78%) pushing develop, 0.1.1 to origin Enumerating objects: 24, done. Counting objects: 100% (24/24), done. Delta compression using up to 8 threads Compressing objects: 100% (17/17), done. Writing objects: 100% (24/24), 3.87 KiB | 566.00 KiB/s, done. Total 24 (delta 4), reused 0 (delta 0) To https://github.com/username/repo * [new branch] develop -> develop * [new tag] 0.1.1 -> 0.1.1","title":"slam release"},{"location":"commands/release/#configuration","text":"","title":"Configuration"},{"location":"commands/release/#releasebranch","text":"Type : str Default : \"develop\" The branch on which releases are created. Unless --no-branch-check is passed to slam release , the command will refuse to continue if the current branch name does not match this value.","title":"release.branch"},{"location":"commands/release/#releasecommit-message","text":"Type : str Default : \"release {version}\" The commit message to use when using the --tag, -t option. The string {version} will be replaced with the new version number.","title":"release.commit-message"},{"location":"commands/release/#releasetag-name","text":"Type : str Default : \"{version}\" The tag name to use when using the --tag, -t option. The string {version} will be replaced with the new version number.","title":"release.tag-name"},{"location":"commands/release/#releasereferences","text":"Type : list[VersionRefConfig] Default : [] A list of version references that should be considered in addition to the version references that are automatically detected by Slam when updating version numbers across the project with the slam release command. A VersionRefConfig contains the fields file: str and pattern: str . The file is considered relative to the project directory (which is the directory where the slam.toml or pyproject.toml configuration file resides).","title":"release.references"},{"location":"commands/test/","text":"slam test Configure the commands to run with slam test under the tool.slam.test table: [tool.slam.test] pytest = \"pytest --cov=slam\" mypy = \"mypy\" pylint = \"pylint --fail-under=8.0\"","title":"slam test"},{"location":"commands/test/#slam-test","text":"Configure the commands to run with slam test under the tool.slam.test table: [tool.slam.test] pytest = \"pytest --cov=slam\" mypy = \"mypy\" pylint = \"pylint --fail-under=8.0\"","title":"slam test"},{"location":"guides/publishing/","text":"TODO: This guide needs to be updated. Publishing with Slam By default, every package is configured to publish to PyPI using the warehouse:pypi publishing target. A test publish to test.pypi.org can be performed by using the --test option when using the slam pkg publish command. Automate publishing in CI checls You can specify the username and password in the config as environment variables. Most CI systems allow you to securely store a secret as an environment variable. name: my-package # ... publish: pypi: credentials: username: __token__ password: '$PYPI_TOKEN' test_username: __token__ test_password: '$TESTPYPI_TOKEN' When you're ready to publish from the CI checks, make it run the following commands: - pip install slam - slam pkg update --verify-tag \"$CI_TAG\" - slam pkg publish warehouse:pypi It is also recommended that you add a trial-publish step. Note that we add the --allow-empty-tag to flag to allow that the value passed to --verify-tag can be empty. This is important because most commits won't be tagged during development. - pip install slam - slam pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - slam pkg publish warehouse:pypi --test Publishing Snapshots The bump command can be used with the --snapshot option to update the version to one that indicates the Git commit distance since the last tagged version. This is useful to publish development snapshots. Note that PyPI/Warehouse does not actually (yet?) support snapshot version numbers. If you want to publish snapshots, you need an alternative package registry such as Artifactory). - slam pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - slam pkg bump --snapshot - slam pkg publish warehouse:pypi --test Important : Many CI systems may not fetch tags when cloning your repository. This means bump --snapshot can not figure out the commit distance and the generated snapshot version number will begin with 0.0.0 . If you encounter this issue, run git fetch --tags before Slam. If you do try to use snapshot versions with PyPI, you will see this type of error: HTTPError: 400 Bad Request from https://test.pypi.org/legacy/ '0.17.1+1.g986bed6' is an invalid value for Version. Error: Can't use PEP 440 local versions. See https://packaging.python.org/specifications/core-metadata for more information.","title":"Publishing"},{"location":"guides/publishing/#publishing-with-slam","text":"By default, every package is configured to publish to PyPI using the warehouse:pypi publishing target. A test publish to test.pypi.org can be performed by using the --test option when using the slam pkg publish command.","title":"Publishing with Slam"},{"location":"guides/publishing/#automate-publishing-in-ci-checls","text":"You can specify the username and password in the config as environment variables. Most CI systems allow you to securely store a secret as an environment variable. name: my-package # ... publish: pypi: credentials: username: __token__ password: '$PYPI_TOKEN' test_username: __token__ test_password: '$TESTPYPI_TOKEN' When you're ready to publish from the CI checks, make it run the following commands: - pip install slam - slam pkg update --verify-tag \"$CI_TAG\" - slam pkg publish warehouse:pypi It is also recommended that you add a trial-publish step. Note that we add the --allow-empty-tag to flag to allow that the value passed to --verify-tag can be empty. This is important because most commits won't be tagged during development. - pip install slam - slam pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - slam pkg publish warehouse:pypi --test","title":"Automate publishing in CI checls"},{"location":"guides/publishing/#publishing-snapshots","text":"The bump command can be used with the --snapshot option to update the version to one that indicates the Git commit distance since the last tagged version. This is useful to publish development snapshots. Note that PyPI/Warehouse does not actually (yet?) support snapshot version numbers. If you want to publish snapshots, you need an alternative package registry such as Artifactory). - slam pkg update --verify-tag \"$CI_TAG\" --allow-empty-tag - slam pkg bump --snapshot - slam pkg publish warehouse:pypi --test Important : Many CI systems may not fetch tags when cloning your repository. This means bump --snapshot can not figure out the commit distance and the generated snapshot version number will begin with 0.0.0 . If you encounter this issue, run git fetch --tags before Slam. If you do try to use snapshot versions with PyPI, you will see this type of error: HTTPError: 400 Bad Request from https://test.pypi.org/legacy/ '0.17.1+1.g986bed6' is an invalid value for Version. Error: Can't use PEP 440 local versions. See https://packaging.python.org/specifications/core-metadata for more information.","title":"Publishing Snapshots"},{"location":"remotes/github/","text":"GitHub slam.ext.remotes.github Can be detected automatically in projects that use Git where the origin remote points to a github.com HTTP or SSH URL. Configuration repo Type : str The repository ID in the form of owner/repo or domain/owner/repo . Examples: NiklasRosenstein/slam our-ghe-instance.io/owner/repo","title":"GitHub"},{"location":"remotes/github/#github","text":"slam.ext.remotes.github Can be detected automatically in projects that use Git where the origin remote points to a github.com HTTP or SSH URL.","title":"GitHub"},{"location":"remotes/github/#configuration","text":"","title":"Configuration"},{"location":"remotes/github/#repo","text":"Type : str The repository ID in the form of owner/repo or domain/owner/repo . Examples: NiklasRosenstein/slam our-ghe-instance.io/owner/repo","title":"repo"}]}