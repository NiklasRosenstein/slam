name: "Python Package"

on:
  push:
    branches: [ "develop" ]
    tags: [ '*' ]
  pull_request:
    branches: [ "develop" ]

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.x"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with: { python-version: "${{ matrix.python-version }}" }
    - run: pip install . && slap install --no-venv-check
    - run: slap info
    - run: slap test
    - run: slap publish --dry

  update-pr:
    name: "Insert PR reference into added changelogs."
    runs-on: ubuntu-20.04
    if: github.base_ref != ''
    steps:
    - uses: actions/checkout@v2
    - run: git fetch && git checkout $GITHUB_HEAD_REF
    - uses: actions/setup-python@v2
      with: { python-version: "3.10" }
    - run: pip install . && slap install --no-venv-check
    - run: slap changelog diff pr update --use github-actions

  require-changelog:
    name: "Require added changelog entries on Pull Requests."
    runs-on: ubuntu-20.04
    if: github.base_ref != '' && !contains(github.event.pull_request.labels.*.name, 'no changelog')  # Only on pull_request or pull_request_target events, and if the PR is not labeled
    steps:
    - uses: actions/checkout@v2
    - run: git fetch && git checkout $GITHUB_HEAD_REF
    - uses: actions/setup-python@v2
      with: { python-version: "3.10" }
    - run: pip install . && slap install --no-venv-check
    - run: slap changelog diff assert-added --use github-actions

  test-pep508:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.x"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with: { python-version: "${{ matrix.python-version }}" }
    - run: pip install mypy dataclasses types-dataclasses -q
    - run: mypy src/slap/python/pep508.py
    - run: python src/slap/python/pep508.py

  docs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with: { fetch-depth: 0 }
    - run: git checkout -b $GITHUB_HEAD_REF
      if: github.event_name == 'pull_request'
    - uses: actions/setup-python@v2
      with: { python-version: "3.10" }
    - run: python -m pip install pipx -q && pipx install .
    # We need to configure separate virtual environments for runtime and docs because they
    # are (or were at the time of writing this) incompatible.
    - run: slap venv -sc docs && slap install --only-extras docs
    - run: slap venv -sc runtime && slap install
    - run: PATH="$PATH:$(slap venv -p docs)/bin" slap run docs:build
    - uses: actions/upload-artifact@v2
      with: { name: docs, path: docs/_site }

  docs-publish:
    needs: [ test, docs ]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v2
      with: { name: docs, path: docs/_site }
    - uses: Cecilapp/GitHub-Pages-deploy@v3
      env: { GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" }
      with: { email: rosensteinniklas@gmail.com, build_dir: docs/_site }
